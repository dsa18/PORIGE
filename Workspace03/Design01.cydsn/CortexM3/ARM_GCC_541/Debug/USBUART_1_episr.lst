ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_1_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_1_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_1_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_1_EP_1_ISR, %function
  25              	USBUART_1_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_1_episr.c"
   1:Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_1_episr.c **** * \file USBUART_1_episr.c
   3:Generated_Source\PSoC5/USBUART_1_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_1_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_1_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_1_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_1_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_1_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_1_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_1_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_pvt.h"
  17:Generated_Source\PSoC5/USBUART_1_episr.c **** #include "USBUART_1_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_1_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_1_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_1_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_1_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_1_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 2


  31:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_1_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_1_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_1_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 0122     		movs	r2, #1
  35 0002 094B     		ldr	r3, .L3
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_1_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP1].addr & USBUART_1_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_1_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP1) != USBUART_1_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 084B     		ldr	r3, .L3+4
  42 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 000e 03F00303 		and	r3, r3, #3
  44 0012 9342     		cmp	r3, r2
  45 0014 04D0     		beq	.L2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 3


  70:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP1].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 0016 054A     		ldr	r2, .L3+4
  48 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001a 83F08003 		eor	r3, r3, #128
  50 001e D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP1].apiEpState = USBUART_1_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0020 0122     		movs	r2, #1
  54 0022 024B     		ldr	r3, .L3+4
  55 0024 5A73     		strb	r2, [r3, #13]
  56 0026 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0028 0B600040 		.word	1073766411
  61 002c 00000000 		.word	USBUART_1_EP
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	USBUART_1_EP_1_ISR, .-USBUART_1_EP_1_ISR
  65              		.section	.text.USBUART_1_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBUART_1_EP_2_ISR
  68              		.thumb
  69              		.thumb_func
  70              		.type	USBUART_1_EP_2_ISR, %function
  71              	USBUART_1_EP_2_ISR:
  72              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP1)
  87:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_1_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_1_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_1_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 4


 100:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP2_INTR);
  78              		.loc 1 137 0
  79 0000 0222     		movs	r2, #2
  80 0002 0A4B     		ldr	r3, .L7
  81 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP2].addr & USBUART_1_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 5


 148:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP2].epCr0;
  82              		.loc 1 148 0
  83 0006 0F3B     		subs	r3, r3, #15
  84 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_1_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP2) != USBUART_1_EP_TYPE_ISOC)
  85              		.loc 1 151 0
  86 000c 084B     		ldr	r3, .L7+4
  87 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  88 0010 03F00303 		and	r3, r3, #3
  89 0014 012B     		cmp	r3, #1
  90 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP2].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
  91              		.loc 1 153 0
  92 0018 054A     		ldr	r2, .L7+4
  93 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  94 001c 83F08003 		eor	r3, r3, #128
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP2].apiEpState = USBUART_1_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		movs	r2, #1
  99 0024 024B     		ldr	r3, .L7+4
 100 0026 5A76     		strb	r2, [r3, #25]
 101 0028 7047     		bx	lr
 102              	.L8:
 103 002a 00BF     		.align	2
 104              	.L7:
 105 002c 0B600040 		.word	1073766411
 106 0030 00000000 		.word	USBUART_1_EP
 107              		.cfi_endproc
 108              	.LFE1:
 109              		.size	USBUART_1_EP_2_ISR, .-USBUART_1_EP_2_ISR
 110              		.section	.text.USBUART_1_EP_3_ISR,"ax",%progbits
 111              		.align	2
 112              		.global	USBUART_1_EP_3_ISR
 113              		.thumb
 114              		.thumb_func
 115              		.type	USBUART_1_EP_3_ISR, %function
 116              	USBUART_1_EP_3_ISR:
 117              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP2)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 6


 169:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_1_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 118              		.loc 1 202 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP3_INTR);    
 123              		.loc 1 218 0
 124 0000 0422     		movs	r2, #4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 7


 125 0002 0C4B     		ldr	r3, .L11
 126 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP3].addr & USBUART_1_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP3].epCr0;
 127              		.loc 1 229 0
 128 0006 0F3B     		subs	r3, r3, #15
 129 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP3) != USBUART_1_EP_TYPE_ISOC)
 130              		.loc 1 232 0
 131 000c 0A4B     		ldr	r3, .L11+4
 132 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 133 0012 03F00303 		and	r3, r3, #3
 134 0016 012B     		cmp	r3, #1
 135 0018 06D0     		beq	.L10
 233:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP3].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 136              		.loc 1 234 0
 137 001a 074A     		ldr	r2, .L11+4
 138 001c 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 139 0020 83F08003 		eor	r3, r3, #128
 140 0024 82F82730 		strb	r3, [r2, #39]
 141              	.L10:
 235:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP3].apiEpState = USBUART_1_EVENT_PENDING;
 142              		.loc 1 243 0
 143 0028 0122     		movs	r2, #1
 144 002a 034B     		ldr	r3, .L11+4
 145 002c 83F82520 		strb	r2, [r3, #37]
 146 0030 7047     		bx	lr
 147              	.L12:
 148 0032 00BF     		.align	2
 149              	.L11:
 150 0034 0B600040 		.word	1073766411
 151 0038 00000000 		.word	USBUART_1_EP
 152              		.cfi_endproc
 153              	.LFE2:
 154              		.size	USBUART_1_EP_3_ISR, .-USBUART_1_EP_3_ISR
 155              		.section	.text.USBUART_1_SOF_ISR,"ax",%progbits
 156              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 8


 157              		.global	USBUART_1_SOF_ISR
 158              		.thumb
 159              		.thumb_func
 160              		.type	USBUART_1_SOF_ISR, %function
 161              	USBUART_1_SOF_ISR:
 162              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP3)
 250:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 9


 295:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP4].addr & USBUART_1_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP4) != USBUART_1_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP4].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP4].apiEpState = USBUART_1_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP4)
 331:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 10


 352:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_1_episr.c ****                  USBUART_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_1_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP5].addr & USBUART_1_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_1_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP5) != USBUART_1_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP5].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP5].apiEpState = USBUART_1_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_1_episr.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 11


 409:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP5)
 413:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 12


 466:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP6].addr & USBUART_1_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP6) != USBUART_1_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP6].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_1_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP6].apiEpState = USBUART_1_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP6)
 495:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 13


 523:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_1_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP7].addr & USBUART_1_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_1_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP7) != USBUART_1_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP7].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_1_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP7].apiEpState = USBUART_1_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_1_episr.c ****             if(USBUART_1_midi_out_ep == USBUART_1_EP7)
 578:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 14


 580:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_1_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieEpInterruptSource(USBUART_1_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_1_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_1_episr.c ****         if (0u != (USBUART_1_EP[USBUART_1_EP8].addr & USBUART_1_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 15


 637:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_1_episr.c ****             (void) USBUART_1_SIE_EP_BASE.sieEp[USBUART_1_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_GET_EP_TYPE(USBUART_1_EP8) != USBUART_1_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_EP[USBUART_1_EP8].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_1_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_1_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_1_episr.c ****             USBUART_1_EP[USBUART_1_EP8].apiEpState = USBUART_1_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_1_episr.c ****         #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_1_episr.c ****             !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (USBUART_1_midi_out_ep == USBUART_1_EP8)
 660:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_1_episr.c ****         #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_1_episr.c ****     #if (CY_PSOC3 && defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_1_episr.c ****         !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_1_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (CY_PSOC3 && USBUART_1_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_1_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_1_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_1_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_SOF_ISR)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 16


 694:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 163              		.loc 1 694 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE3:
 171              		.size	USBUART_1_SOF_ISR, .-USBUART_1_SOF_ISR
 172 0002 00BF     		.section	.text.USBUART_1_BUS_RESET_ISR,"ax",%progbits
 173              		.align	2
 174              		.global	USBUART_1_BUS_RESET_ISR
 175              		.thumb
 176              		.thumb_func
 177              		.type	USBUART_1_BUS_RESET_ISR, %function
 178              	USBUART_1_BUS_RESET_ISR:
 179              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_1_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_1_episr.c **** * Function Name: USBUART_1_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_1_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_1_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_1_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_1_episr.c **** CY_ISR(USBUART_1_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_1_episr.c **** {
 180              		.loc 1 723 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		.loc 1 723 0
 185 0000 08B5     		push	{r3, lr}
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 17


 725:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ReInitComponent();
 189              		.loc 1 734 0
 190 0002 FFF7FEFF 		bl	USBUART_1_ReInitComponent
 191              	.LVL0:
 192 0006 08BD     		pop	{r3, pc}
 193              		.cfi_endproc
 194              	.LFE4:
 195              		.size	USBUART_1_BUS_RESET_ISR, .-USBUART_1_BUS_RESET_ISR
 196              		.section	.text.USBUART_1_ARB_ISR,"ax",%progbits
 197              		.align	2
 198              		.global	USBUART_1_ARB_ISR
 199              		.thumb
 200              		.thumb_func
 201              		.type	USBUART_1_ARB_ISR, %function
 202              	USBUART_1_ARB_ISR:
 203              	.LFB5:
 735:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 736:Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBUART_1_episr.c **** }
 740:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 742:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 743:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_LPM_ACTIVE)
 744:Generated_Source\PSoC5/USBUART_1_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC5/USBUART_1_episr.c **** * Function Name: USBUART_1_INTR_LPM_ISR
 746:Generated_Source\PSoC5/USBUART_1_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 748:Generated_Source\PSoC5/USBUART_1_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 750:Generated_Source\PSoC5/USBUART_1_episr.c **** *
 751:Generated_Source\PSoC5/USBUART_1_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC5/USBUART_1_episr.c **** CY_ISR(USBUART_1_LPM_ISR)
 753:Generated_Source\PSoC5/USBUART_1_episr.c **** {
 754:Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_LPM_ISR_ENTRY_CALLBACK
 755:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 758:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 760:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 762:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_ClearSieInterruptSource(USBUART_1_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 764:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 766:Generated_Source\PSoC5/USBUART_1_episr.c ****     /* `#END` */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 18


 767:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 768:Generated_Source\PSoC5/USBUART_1_episr.c **** #ifdef USBUART_1_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC5/USBUART_1_episr.c ****     USBUART_1_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC5/USBUART_1_episr.c **** }
 772:Generated_Source\PSoC5/USBUART_1_episr.c **** #endif /* (USBUART_1_LPM_ACTIVE) */
 773:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 774:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 775:Generated_Source\PSoC5/USBUART_1_episr.c **** #if (USBUART_1_EP_MANAGEMENT_DMA && USBUART_1_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC5/USBUART_1_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC5/USBUART_1_episr.c ****     * Function Name: USBUART_1_ARB_ISR
 778:Generated_Source\PSoC5/USBUART_1_episr.c ****     ************************************************************************//**
 779:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 780:Generated_Source\PSoC5/USBUART_1_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 782:Generated_Source\PSoC5/USBUART_1_episr.c ****     *
 783:Generated_Source\PSoC5/USBUART_1_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC5/USBUART_1_episr.c ****     CY_ISR(USBUART_1_ARB_ISR)
 785:Generated_Source\PSoC5/USBUART_1_episr.c ****     {
 204              		.loc 1 785 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 70B4     		push	{r4, r5, r6}
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 5, -8
 213              		.cfi_offset 6, -4
 214              	.LVL1:
 786:Generated_Source\PSoC5/USBUART_1_episr.c ****         uint8 arbIntrStatus;
 787:Generated_Source\PSoC5/USBUART_1_episr.c ****         uint8 epStatus;
 788:Generated_Source\PSoC5/USBUART_1_episr.c ****         uint8 ep = USBUART_1_EP1;
 789:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 790:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_ARB_ISR_ENTRY_CALLBACK) */
 793:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 794:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 796:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 798:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC5/USBUART_1_episr.c ****         arbIntrStatus = USBUART_1_ARB_INT_SR_REG;
 215              		.loc 1 799 0
 216 0002 234B     		ldr	r3, .L23
 217 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 218 0006 E4B2     		uxtb	r4, r4
 219              	.LVL2:
 788:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 220              		.loc 1 788 0
 221 0008 0123     		movs	r3, #1
 800:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 801:Generated_Source\PSoC5/USBUART_1_episr.c ****         while (0u != arbIntrStatus)
 222              		.loc 1 801 0
 223 000a 3DE0     		b	.L17
 224              	.LVL3:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 19


 225              	.L21:
 802:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 803:Generated_Source\PSoC5/USBUART_1_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC5/USBUART_1_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 226              		.loc 1 804 0
 227 000c 14F0010F 		tst	r4, #1
 228 0010 37D0     		beq	.L18
 805:Generated_Source\PSoC5/USBUART_1_episr.c ****             {
 806:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC5/USBUART_1_episr.c ****                 epStatus = (USBUART_1_ARB_EP_BASE.arbEp[ep].epSr & USBUART_1_ARB_EP_BASE.arbEp[ep].
 229              		.loc 1 807 0
 230 0012 1A46     		mov	r2, r3
 231 0014 1901     		lsls	r1, r3, #4
 232 0016 1F48     		ldr	r0, .L23+4
 233 0018 0844     		add	r0, r0, r1
 234 001a 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 235 001c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 236 001e 0140     		ands	r1, r1, r0
 237              	.LVL4:
 808:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 809:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC5/USBUART_1_episr.c ****                 if (0u != (epStatus & USBUART_1_ARB_EPX_INT_IN_BUF_FULL))
 238              		.loc 1 810 0
 239 0020 11F0010F 		tst	r1, #1
 240 0024 17D0     		beq	.L19
 811:Generated_Source\PSoC5/USBUART_1_episr.c ****                 {
 812:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (0u != (USBUART_1_EP[ep].addr & USBUART_1_DIR_IN))
 241              		.loc 1 812 0
 242 0026 03EB4305 		add	r5, r3, r3, lsl #1
 243 002a A800     		lsls	r0, r5, #2
 244 002c 1A4D     		ldr	r5, .L23+8
 245 002e 2844     		add	r0, r0, r5
 246 0030 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 247 0032 10F0800F 		tst	r0, #128
 248 0036 0ED0     		beq	.L19
 813:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 814:Generated_Source\PSoC5/USBUART_1_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBUART_1_ARB_EPX_CFG_IN_
 249              		.loc 1 815 0
 250 0038 164D     		ldr	r5, .L23+4
 251 003a 1E01     		lsls	r6, r3, #4
 252 003c A85D     		ldrb	r0, [r5, r6]	@ zero_extendqisi2
 253 003e 00F0FE00 		and	r0, r0, #254
 254 0042 A855     		strb	r0, [r5, r6]
 816:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 817:Generated_Source\PSoC5/USBUART_1_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC5/USBUART_1_episr.c ****                         #if (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC5/USBUART_1_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC5/USBUART_1_episr.c ****                             if(USBUART_1_inLength[ep] > USBUART_1_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC5/USBUART_1_episr.c ****                             {
 822:Generated_Source\PSoC5/USBUART_1_episr.c ****                                 USBUART_1_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC5/USBUART_1_episr.c ****                             }
 824:Generated_Source\PSoC5/USBUART_1_episr.c ****                             else
 825:Generated_Source\PSoC5/USBUART_1_episr.c ****                             {
 826:Generated_Source\PSoC5/USBUART_1_episr.c ****                                 USBUART_1_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC5/USBUART_1_episr.c ****                             }
 828:Generated_Source\PSoC5/USBUART_1_episr.c ****                         #endif /* (USBUART_1_EP_MANAGEMENT_DMA_AUTO && (USBUART_1_EP_DMA_AUTO_OPT =
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 20


 829:Generated_Source\PSoC5/USBUART_1_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 831:Generated_Source\PSoC5/USBUART_1_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_SIE_EP_BASE.sieEp[ep].epCr0 = USBUART_1_EP[ep].epMode;
 255              		.loc 1 832 0
 256 0044 03EB4305 		add	r5, r3, r3, lsl #1
 257 0048 A800     		lsls	r0, r5, #2
 258 004a 134D     		ldr	r5, .L23+8
 259 004c 2844     		add	r0, r0, r5
 260 004e 4579     		ldrb	r5, [r0, #5]	@ zero_extendqisi2
 261 0050 EDB2     		uxtb	r5, r5
 262 0052 1248     		ldr	r0, .L23+12
 263 0054 8555     		strb	r5, [r0, r6]
 264              	.L19:
 833:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 834:Generated_Source\PSoC5/USBUART_1_episr.c ****                     #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && USBUART_1_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC5/USBUART_1_episr.c ****                         if (ep == USBUART_1_midi_in_ep)
 836:Generated_Source\PSoC5/USBUART_1_episr.c ****                         {
 837:Generated_Source\PSoC5/USBUART_1_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC5/USBUART_1_episr.c ****                             USBUART_1_midiInPointer = 0u;
 839:Generated_Source\PSoC5/USBUART_1_episr.c ****                         }
 840:Generated_Source\PSoC5/USBUART_1_episr.c ****                     #endif /* (USBUART_1_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 842:Generated_Source\PSoC5/USBUART_1_episr.c ****                 }
 843:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 844:Generated_Source\PSoC5/USBUART_1_episr.c ****             #if (USBUART_1_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC5/USBUART_1_episr.c ****                 if (0u != (epStatus & USBUART_1_ARB_EPX_SR_DMA_GNT))
 265              		.loc 1 846 0
 266 0056 11F0020F 		tst	r1, #2
 267 005a 0FD0     		beq	.L20
 847:Generated_Source\PSoC5/USBUART_1_episr.c ****                 {
 848:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (0u == (USBUART_1_EP[ep].addr & USBUART_1_DIR_IN))
 268              		.loc 1 848 0
 269 005c 02EB4205 		add	r5, r2, r2, lsl #1
 270 0060 A800     		lsls	r0, r5, #2
 271 0062 0D4D     		ldr	r5, .L23+8
 272 0064 2844     		add	r0, r0, r5
 273 0066 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 274 0068 10F0800F 		tst	r0, #128
 275 006c 06D1     		bne	.L20
 849:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 850:Generated_Source\PSoC5/USBUART_1_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_EP[ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
 276              		.loc 1 851 0
 277 006e 02EB4205 		add	r5, r2, r2, lsl #1
 278 0072 A800     		lsls	r0, r5, #2
 279 0074 084D     		ldr	r5, .L23+8
 280 0076 2844     		add	r0, r0, r5
 281 0078 0025     		movs	r5, #0
 282 007a 4570     		strb	r5, [r0, #1]
 283              	.L20:
 852:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 853:Generated_Source\PSoC5/USBUART_1_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 855:Generated_Source\PSoC5/USBUART_1_episr.c ****                 }
 856:Generated_Source\PSoC5/USBUART_1_episr.c ****             #endif /* (USBUART_1_EP_MANAGEMENT_DMA_MANUAL) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 21


 857:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 858:Generated_Source\PSoC5/USBUART_1_episr.c ****             #if (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC5/USBUART_1_episr.c ****                 if (0u != (epStatus & USBUART_1_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC5/USBUART_1_episr.c ****                 {
 862:Generated_Source\PSoC5/USBUART_1_episr.c ****                     uint32 channelNum = USBUART_1_DmaChan[ep];
 863:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 864:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_DmaEpBurstCnt[ep] = USBUART_1_DMA_GET_BURST_CNT(USBUART_1_DmaEpBurstC
 866:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 867:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 870:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC5/USBUART_1_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC5/USBUART_1_episr.c ****                     */
 873:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaTriggerOut(USBUART_1_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 875:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR0, (void*) ((uint32
 877:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaSetDstAddress(channelNum, USBUART_1_DMA_DESCR1, (void*) ((uint32
 878:Generated_Source\PSoC5/USBUART_1_episr.c ****                                                                                                    
 879:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 880:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (0u != (USBUART_1_DmaEpLastBurstEl[ep] & USBUART_1_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 883:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_CyDmaSetNumDataElements(channelNum, (USBUART_1_DmaEpLastBurstEl[e
 884:Generated_Source\PSoC5/USBUART_1_episr.c ****                                                                              USBUART_1_DMA_GET_MAX_
 885:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 886:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 887:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR0);
 889:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (USBUART_1_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 891:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_CyDmaValidateDescriptor(channelNum, USBUART_1_DMA_DESCR1);
 892:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 893:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 895:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC5/USBUART_1_episr.c ****                     
 898:Generated_Source\PSoC5/USBUART_1_episr.c ****                     
 899:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC5/USBUART_1_episr.c ****                     (void) USBUART_1_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC5/USBUART_1_episr.c ****                     
 902:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (USBUART_1_GET_EP_TYPE(ep) != USBUART_1_EP_TYPE_ISOC)
 904:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 905:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_EP[ep].epToggle ^= USBUART_1_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 907:Generated_Source\PSoC5/USBUART_1_episr.c ****             
 908:Generated_Source\PSoC5/USBUART_1_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC5/USBUART_1_episr.c ****                     USBUART_1_EP[ep].apiEpState = USBUART_1_EVENT_PENDING;
 910:Generated_Source\PSoC5/USBUART_1_episr.c ****                     
 911:Generated_Source\PSoC5/USBUART_1_episr.c ****                 #if (defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC5/USBUART_1_episr.c ****                     !defined(USBUART_1_MAIN_SERVICE_MIDI_OUT) && USBUART_1_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC5/USBUART_1_episr.c ****                     if (USBUART_1_midi_out_ep == ep)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 22


 914:Generated_Source\PSoC5/USBUART_1_episr.c ****                     {
 915:Generated_Source\PSoC5/USBUART_1_episr.c ****                         USBUART_1_MIDI_OUT_Service();
 916:Generated_Source\PSoC5/USBUART_1_episr.c ****                     }
 917:Generated_Source\PSoC5/USBUART_1_episr.c ****                 #endif /* (USBUART_1_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC5/USBUART_1_episr.c ****                 }
 919:Generated_Source\PSoC5/USBUART_1_episr.c ****             #endif /* (CY_PSOC4 && USBUART_1_EP_MANAGEMENT_DMA_AUTO) */
 920:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 921:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 922:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 924:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 926:Generated_Source\PSoC5/USBUART_1_episr.c ****             #ifdef USBUART_1_ARB_ISR_CALLBACK
 927:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC5/USBUART_1_episr.c ****             #endif /* (USBUART_1_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 930:Generated_Source\PSoC5/USBUART_1_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC5/USBUART_1_episr.c ****                 USBUART_1_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 284              		.loc 1 931 0
 285 007c 1201     		lsls	r2, r2, #4
 286 007e 0848     		ldr	r0, .L23+16
 287 0080 8154     		strb	r1, [r0, r2]
 288              	.LVL5:
 289              	.L18:
 932:Generated_Source\PSoC5/USBUART_1_episr.c ****             }
 933:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 934:Generated_Source\PSoC5/USBUART_1_episr.c ****             ++ep;
 290              		.loc 1 934 0
 291 0082 0133     		adds	r3, r3, #1
 292              	.LVL6:
 293 0084 DBB2     		uxtb	r3, r3
 294              	.LVL7:
 935:Generated_Source\PSoC5/USBUART_1_episr.c ****             arbIntrStatus >>= 1u;
 295              		.loc 1 935 0
 296 0086 6408     		lsrs	r4, r4, #1
 297              	.LVL8:
 298              	.L17:
 801:Generated_Source\PSoC5/USBUART_1_episr.c ****         {
 299              		.loc 1 801 0
 300 0088 002C     		cmp	r4, #0
 301 008a BFD1     		bne	.L21
 936:Generated_Source\PSoC5/USBUART_1_episr.c ****         }
 937:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 938:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 939:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 940:Generated_Source\PSoC5/USBUART_1_episr.c ****         /* `#END` */
 941:Generated_Source\PSoC5/USBUART_1_episr.c **** 
 942:Generated_Source\PSoC5/USBUART_1_episr.c ****     #ifdef USBUART_1_ARB_ISR_EXIT_CALLBACK
 943:Generated_Source\PSoC5/USBUART_1_episr.c ****         USBUART_1_ARB_ISR_ExitCallback();
 944:Generated_Source\PSoC5/USBUART_1_episr.c ****     #endif /* (USBUART_1_ARB_ISR_EXIT_CALLBACK) */
 945:Generated_Source\PSoC5/USBUART_1_episr.c ****     }
 302              		.loc 1 945 0
 303 008c 70BC     		pop	{r4, r5, r6}
 304              		.cfi_restore 6
 305              		.cfi_restore 5
 306              		.cfi_restore 4
 307              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 23


 308              	.LVL9:
 309 008e 7047     		bx	lr
 310              	.L24:
 311              		.align	2
 312              	.L23:
 313 0090 9F600040 		.word	1073766559
 314 0094 70600040 		.word	1073766512
 315 0098 00000000 		.word	USBUART_1_EP
 316 009c FE5F0040 		.word	1073766398
 317 00a0 72600040 		.word	1073766514
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	USBUART_1_ARB_ISR, .-USBUART_1_ARB_ISR
 321              		.text
 322              	.Letext0:
 323              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 324              		.file 3 "Generated_Source\\PSoC5\\USBUART_1.h"
 325              		.file 4 "Generated_Source\\PSoC5\\USBUART_1_pvt.h"
 326              		.section	.debug_info,"",%progbits
 327              	.Ldebug_info0:
 328 0000 65030000 		.4byte	0x365
 329 0004 0400     		.2byte	0x4
 330 0006 00000000 		.4byte	.Ldebug_abbrev0
 331 000a 04       		.byte	0x4
 332 000b 01       		.uleb128 0x1
 333 000c 95000000 		.4byte	.LASF53
 334 0010 0C       		.byte	0xc
 335 0011 CE010000 		.4byte	.LASF54
 336 0015 2E030000 		.4byte	.LASF55
 337 0019 00000000 		.4byte	.Ldebug_ranges0+0
 338 001d 00000000 		.4byte	0
 339 0021 00000000 		.4byte	.Ldebug_line0
 340 0025 02       		.uleb128 0x2
 341 0026 01       		.byte	0x1
 342 0027 06       		.byte	0x6
 343 0028 22030000 		.4byte	.LASF0
 344 002c 02       		.uleb128 0x2
 345 002d 01       		.byte	0x1
 346 002e 08       		.byte	0x8
 347 002f 87000000 		.4byte	.LASF1
 348 0033 02       		.uleb128 0x2
 349 0034 02       		.byte	0x2
 350 0035 05       		.byte	0x5
 351 0036 D1020000 		.4byte	.LASF2
 352 003a 02       		.uleb128 0x2
 353 003b 02       		.byte	0x2
 354 003c 07       		.byte	0x7
 355 003d 2D000000 		.4byte	.LASF3
 356 0041 02       		.uleb128 0x2
 357 0042 04       		.byte	0x4
 358 0043 05       		.byte	0x5
 359 0044 02030000 		.4byte	.LASF4
 360 0048 02       		.uleb128 0x2
 361 0049 04       		.byte	0x4
 362 004a 07       		.byte	0x7
 363 004b 28010000 		.4byte	.LASF5
 364 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 24


 365 0050 08       		.byte	0x8
 366 0051 05       		.byte	0x5
 367 0052 81020000 		.4byte	.LASF6
 368 0056 02       		.uleb128 0x2
 369 0057 08       		.byte	0x8
 370 0058 07       		.byte	0x7
 371 0059 1D020000 		.4byte	.LASF7
 372 005d 03       		.uleb128 0x3
 373 005e 04       		.byte	0x4
 374 005f 05       		.byte	0x5
 375 0060 696E7400 		.ascii	"int\000"
 376 0064 02       		.uleb128 0x2
 377 0065 04       		.byte	0x4
 378 0066 07       		.byte	0x7
 379 0067 F7010000 		.4byte	.LASF8
 380 006b 04       		.uleb128 0x4
 381 006c E0020000 		.4byte	.LASF9
 382 0070 02       		.byte	0x2
 383 0071 9201     		.2byte	0x192
 384 0073 2C000000 		.4byte	0x2c
 385 0077 04       		.uleb128 0x4
 386 0078 A4010000 		.4byte	.LASF10
 387 007c 02       		.byte	0x2
 388 007d 9301     		.2byte	0x193
 389 007f 3A000000 		.4byte	0x3a
 390 0083 02       		.uleb128 0x2
 391 0084 04       		.byte	0x4
 392 0085 04       		.byte	0x4
 393 0086 11000000 		.4byte	.LASF11
 394 008a 02       		.uleb128 0x2
 395 008b 08       		.byte	0x8
 396 008c 04       		.byte	0x4
 397 008d 64010000 		.4byte	.LASF12
 398 0091 02       		.uleb128 0x2
 399 0092 01       		.byte	0x1
 400 0093 08       		.byte	0x8
 401 0094 A8020000 		.4byte	.LASF13
 402 0098 04       		.uleb128 0x4
 403 0099 23010000 		.4byte	.LASF14
 404 009d 02       		.byte	0x2
 405 009e 3C02     		.2byte	0x23c
 406 00a0 A4000000 		.4byte	0xa4
 407 00a4 05       		.uleb128 0x5
 408 00a5 6B000000 		.4byte	0x6b
 409 00a9 02       		.uleb128 0x2
 410 00aa 08       		.byte	0x8
 411 00ab 04       		.byte	0x4
 412 00ac 16030000 		.4byte	.LASF15
 413 00b0 02       		.uleb128 0x2
 414 00b1 04       		.byte	0x4
 415 00b2 07       		.byte	0x7
 416 00b3 59020000 		.4byte	.LASF16
 417 00b7 06       		.uleb128 0x6
 418 00b8 0C       		.byte	0xc
 419 00b9 03       		.byte	0x3
 420 00ba 8D       		.byte	0x8d
 421 00bb 2C010000 		.4byte	0x12c
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 25


 422 00bf 07       		.uleb128 0x7
 423 00c0 6B010000 		.4byte	.LASF17
 424 00c4 03       		.byte	0x3
 425 00c5 8F       		.byte	0x8f
 426 00c6 6B000000 		.4byte	0x6b
 427 00ca 00       		.byte	0
 428 00cb 07       		.uleb128 0x7
 429 00cc AB010000 		.4byte	.LASF18
 430 00d0 03       		.byte	0x3
 431 00d1 90       		.byte	0x90
 432 00d2 6B000000 		.4byte	0x6b
 433 00d6 01       		.byte	0x1
 434 00d7 07       		.uleb128 0x7
 435 00d8 34020000 		.4byte	.LASF19
 436 00dc 03       		.byte	0x3
 437 00dd 91       		.byte	0x91
 438 00de 6B000000 		.4byte	0x6b
 439 00e2 02       		.byte	0x2
 440 00e3 07       		.uleb128 0x7
 441 00e4 7E000000 		.4byte	.LASF20
 442 00e8 03       		.byte	0x3
 443 00e9 92       		.byte	0x92
 444 00ea 6B000000 		.4byte	0x6b
 445 00ee 03       		.byte	0x3
 446 00ef 07       		.uleb128 0x7
 447 00f0 3A010000 		.4byte	.LASF21
 448 00f4 03       		.byte	0x3
 449 00f5 93       		.byte	0x93
 450 00f6 6B000000 		.4byte	0x6b
 451 00fa 04       		.byte	0x4
 452 00fb 07       		.uleb128 0x7
 453 00fc 7A020000 		.4byte	.LASF22
 454 0100 03       		.byte	0x3
 455 0101 94       		.byte	0x94
 456 0102 6B000000 		.4byte	0x6b
 457 0106 05       		.byte	0x5
 458 0107 07       		.uleb128 0x7
 459 0108 0B030000 		.4byte	.LASF23
 460 010c 03       		.byte	0x3
 461 010d 95       		.byte	0x95
 462 010e 77000000 		.4byte	0x77
 463 0112 06       		.byte	0x6
 464 0113 07       		.uleb128 0x7
 465 0114 C6020000 		.4byte	.LASF24
 466 0118 03       		.byte	0x3
 467 0119 96       		.byte	0x96
 468 011a 77000000 		.4byte	0x77
 469 011e 08       		.byte	0x8
 470 011f 07       		.uleb128 0x7
 471 0120 E6020000 		.4byte	.LASF25
 472 0124 03       		.byte	0x3
 473 0125 97       		.byte	0x97
 474 0126 6B000000 		.4byte	0x6b
 475 012a 0A       		.byte	0xa
 476 012b 00       		.byte	0
 477 012c 08       		.uleb128 0x8
 478 012d 8F020000 		.4byte	.LASF26
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 26


 479 0131 03       		.byte	0x3
 480 0132 98       		.byte	0x98
 481 0133 B7000000 		.4byte	0xb7
 482 0137 06       		.uleb128 0x6
 483 0138 10       		.byte	0x10
 484 0139 03       		.byte	0x3
 485 013a D4       		.byte	0xd4
 486 013b 70010000 		.4byte	0x170
 487 013f 07       		.uleb128 0x7
 488 0140 70000000 		.4byte	.LASF27
 489 0144 03       		.byte	0x3
 490 0145 D6       		.byte	0xd6
 491 0146 6B000000 		.4byte	0x6b
 492 014a 00       		.byte	0
 493 014b 07       		.uleb128 0x7
 494 014c 77000000 		.4byte	.LASF28
 495 0150 03       		.byte	0x3
 496 0151 D7       		.byte	0xd7
 497 0152 6B000000 		.4byte	0x6b
 498 0156 01       		.byte	0x1
 499 0157 07       		.uleb128 0x7
 500 0158 0B000000 		.4byte	.LASF29
 501 015c 03       		.byte	0x3
 502 015d D8       		.byte	0xd8
 503 015e 6B000000 		.4byte	0x6b
 504 0162 02       		.byte	0x2
 505 0163 09       		.uleb128 0x9
 506 0164 67617000 		.ascii	"gap\000"
 507 0168 03       		.byte	0x3
 508 0169 D9       		.byte	0xd9
 509 016a 70010000 		.4byte	0x170
 510 016e 03       		.byte	0x3
 511 016f 00       		.byte	0
 512 0170 0A       		.uleb128 0xa
 513 0171 6B000000 		.4byte	0x6b
 514 0175 80010000 		.4byte	0x180
 515 0179 0B       		.uleb128 0xb
 516 017a B0000000 		.4byte	0xb0
 517 017e 0C       		.byte	0xc
 518 017f 00       		.byte	0
 519 0180 08       		.uleb128 0x8
 520 0181 62020000 		.4byte	.LASF30
 521 0185 03       		.byte	0x3
 522 0186 DA       		.byte	0xda
 523 0187 37010000 		.4byte	0x137
 524 018b 06       		.uleb128 0x6
 525 018c 10       		.byte	0x10
 526 018d 03       		.byte	0x3
 527 018e E6       		.byte	0xe6
 528 018f 0C020000 		.4byte	0x20c
 529 0193 07       		.uleb128 0x7
 530 0194 40000000 		.4byte	.LASF31
 531 0198 03       		.byte	0x3
 532 0199 E8       		.byte	0xe8
 533 019a 6B000000 		.4byte	0x6b
 534 019e 00       		.byte	0
 535 019f 07       		.uleb128 0x7
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 27


 536 01a0 3E020000 		.4byte	.LASF32
 537 01a4 03       		.byte	0x3
 538 01a5 E9       		.byte	0xe9
 539 01a6 6B000000 		.4byte	0x6b
 540 01aa 01       		.byte	0x1
 541 01ab 07       		.uleb128 0x7
 542 01ac 3F010000 		.4byte	.LASF33
 543 01b0 03       		.byte	0x3
 544 01b1 EA       		.byte	0xea
 545 01b2 6B000000 		.4byte	0x6b
 546 01b6 02       		.byte	0x2
 547 01b7 07       		.uleb128 0x7
 548 01b8 17000000 		.4byte	.LASF34
 549 01bc 03       		.byte	0x3
 550 01bd EB       		.byte	0xeb
 551 01be 6B000000 		.4byte	0x6b
 552 01c2 03       		.byte	0x3
 553 01c3 07       		.uleb128 0x7
 554 01c4 5F010000 		.4byte	.LASF35
 555 01c8 03       		.byte	0x3
 556 01c9 EC       		.byte	0xec
 557 01ca 6B000000 		.4byte	0x6b
 558 01ce 04       		.byte	0x4
 559 01cf 07       		.uleb128 0x7
 560 01d0 9C010000 		.4byte	.LASF36
 561 01d4 03       		.byte	0x3
 562 01d5 ED       		.byte	0xed
 563 01d6 6B000000 		.4byte	0x6b
 564 01da 05       		.byte	0x5
 565 01db 07       		.uleb128 0x7
 566 01dc DB020000 		.4byte	.LASF37
 567 01e0 03       		.byte	0x3
 568 01e1 EE       		.byte	0xee
 569 01e2 6B000000 		.4byte	0x6b
 570 01e6 06       		.byte	0x6
 571 01e7 07       		.uleb128 0x7
 572 01e8 57010000 		.4byte	.LASF38
 573 01ec 03       		.byte	0x3
 574 01ed EF       		.byte	0xef
 575 01ee 6B000000 		.4byte	0x6b
 576 01f2 07       		.byte	0x7
 577 01f3 07       		.uleb128 0x7
 578 01f4 06000000 		.4byte	.LASF39
 579 01f8 03       		.byte	0x3
 580 01f9 F0       		.byte	0xf0
 581 01fa 6B000000 		.4byte	0x6b
 582 01fe 08       		.byte	0x8
 583 01ff 09       		.uleb128 0x9
 584 0200 67617000 		.ascii	"gap\000"
 585 0204 03       		.byte	0x3
 586 0205 F1       		.byte	0xf1
 587 0206 0C020000 		.4byte	0x20c
 588 020a 09       		.byte	0x9
 589 020b 00       		.byte	0
 590 020c 0A       		.uleb128 0xa
 591 020d 6B000000 		.4byte	0x6b
 592 0211 1C020000 		.4byte	0x21c
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 28


 593 0215 0B       		.uleb128 0xb
 594 0216 B0000000 		.4byte	0xb0
 595 021a 06       		.byte	0x6
 596 021b 00       		.byte	0
 597 021c 08       		.uleb128 0x8
 598 021d B6010000 		.4byte	.LASF40
 599 0221 03       		.byte	0x3
 600 0222 F2       		.byte	0xf2
 601 0223 8B010000 		.4byte	0x18b
 602 0227 0C       		.uleb128 0xc
 603 0228 90       		.byte	0x90
 604 0229 03       		.byte	0x3
 605 022a 0E01     		.2byte	0x10e
 606 022c 3E020000 		.4byte	0x23e
 607 0230 0D       		.uleb128 0xd
 608 0231 71030000 		.4byte	.LASF41
 609 0235 03       		.byte	0x3
 610 0236 1001     		.2byte	0x110
 611 0238 3E020000 		.4byte	0x23e
 612 023c 00       		.byte	0
 613 023d 00       		.byte	0
 614 023e 0A       		.uleb128 0xa
 615 023f 80010000 		.4byte	0x180
 616 0243 4E020000 		.4byte	0x24e
 617 0247 0B       		.uleb128 0xb
 618 0248 B0000000 		.4byte	0xb0
 619 024c 08       		.byte	0x8
 620 024d 00       		.byte	0
 621 024e 04       		.uleb128 0x4
 622 024f 04020000 		.4byte	.LASF42
 623 0253 03       		.byte	0x3
 624 0254 1101     		.2byte	0x111
 625 0256 27020000 		.4byte	0x227
 626 025a 0C       		.uleb128 0xc
 627 025b 90       		.byte	0x90
 628 025c 03       		.byte	0x3
 629 025d 1401     		.2byte	0x114
 630 025f 71020000 		.4byte	0x271
 631 0263 0D       		.uleb128 0xd
 632 0264 00000000 		.4byte	.LASF43
 633 0268 03       		.byte	0x3
 634 0269 1601     		.2byte	0x116
 635 026b 71020000 		.4byte	0x271
 636 026f 00       		.byte	0
 637 0270 00       		.byte	0
 638 0271 0A       		.uleb128 0xa
 639 0272 1C020000 		.4byte	0x21c
 640 0276 81020000 		.4byte	0x281
 641 027a 0B       		.uleb128 0xb
 642 027b B0000000 		.4byte	0xb0
 643 027f 08       		.byte	0x8
 644 0280 00       		.byte	0
 645 0281 04       		.uleb128 0x4
 646 0282 AD020000 		.4byte	.LASF44
 647 0286 03       		.byte	0x3
 648 0287 1701     		.2byte	0x117
 649 0289 5A020000 		.4byte	0x25a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 29


 650 028d 0E       		.uleb128 0xe
 651 028e 46000000 		.4byte	.LASF45
 652 0292 01       		.byte	0x1
 653 0293 25       		.byte	0x25
 654 0294 00000000 		.4byte	.LFB0
 655 0298 30000000 		.4byte	.LFE0-.LFB0
 656 029c 01       		.uleb128 0x1
 657 029d 9C       		.byte	0x9c
 658 029e 0E       		.uleb128 0xe
 659 029f 44010000 		.4byte	.LASF46
 660 02a3 01       		.byte	0x1
 661 02a4 78       		.byte	0x78
 662 02a5 00000000 		.4byte	.LFB1
 663 02a9 34000000 		.4byte	.LFE1-.LFB1
 664 02ad 01       		.uleb128 0x1
 665 02ae 9C       		.byte	0x9c
 666 02af 0E       		.uleb128 0xe
 667 02b0 46020000 		.4byte	.LASF47
 668 02b4 01       		.byte	0x1
 669 02b5 C9       		.byte	0xc9
 670 02b6 00000000 		.4byte	.LFB2
 671 02ba 3C000000 		.4byte	.LFE2-.LFB2
 672 02be 01       		.uleb128 0x1
 673 02bf 9C       		.byte	0x9c
 674 02c0 0F       		.uleb128 0xf
 675 02c1 8A010000 		.4byte	.LASF48
 676 02c5 01       		.byte	0x1
 677 02c6 B502     		.2byte	0x2b5
 678 02c8 00000000 		.4byte	.LFB3
 679 02cc 02000000 		.4byte	.LFE3-.LFB3
 680 02d0 01       		.uleb128 0x1
 681 02d1 9C       		.byte	0x9c
 682 02d2 10       		.uleb128 0x10
 683 02d3 72010000 		.4byte	.LASF49
 684 02d7 01       		.byte	0x1
 685 02d8 D202     		.2byte	0x2d2
 686 02da 00000000 		.4byte	.LFB4
 687 02de 08000000 		.4byte	.LFE4-.LFB4
 688 02e2 01       		.uleb128 0x1
 689 02e3 9C       		.byte	0x9c
 690 02e4 F2020000 		.4byte	0x2f2
 691 02e8 11       		.uleb128 0x11
 692 02e9 06000000 		.4byte	.LVL0
 693 02ed 5D030000 		.4byte	0x35d
 694 02f1 00       		.byte	0
 695 02f2 10       		.uleb128 0x10
 696 02f3 F0020000 		.4byte	.LASF50
 697 02f7 01       		.byte	0x1
 698 02f8 1003     		.2byte	0x310
 699 02fa 00000000 		.4byte	.LFB5
 700 02fe A4000000 		.4byte	.LFE5-.LFB5
 701 0302 01       		.uleb128 0x1
 702 0303 9C       		.byte	0x9c
 703 0304 38030000 		.4byte	0x338
 704 0308 12       		.uleb128 0x12
 705 0309 62000000 		.4byte	.LASF51
 706 030d 01       		.byte	0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 30


 707 030e 1203     		.2byte	0x312
 708 0310 6B000000 		.4byte	0x6b
 709 0314 00000000 		.4byte	.LLST0
 710 0318 12       		.uleb128 0x12
 711 0319 59000000 		.4byte	.LASF52
 712 031d 01       		.byte	0x1
 713 031e 1303     		.2byte	0x313
 714 0320 6B000000 		.4byte	0x6b
 715 0324 13000000 		.4byte	.LLST1
 716 0328 13       		.uleb128 0x13
 717 0329 657000   		.ascii	"ep\000"
 718 032c 01       		.byte	0x1
 719 032d 1403     		.2byte	0x314
 720 032f 6B000000 		.4byte	0x6b
 721 0333 26000000 		.4byte	.LLST2
 722 0337 00       		.byte	0
 723 0338 0A       		.uleb128 0xa
 724 0339 48030000 		.4byte	0x348
 725 033d 48030000 		.4byte	0x348
 726 0341 0B       		.uleb128 0xb
 727 0342 B0000000 		.4byte	0xb0
 728 0346 08       		.byte	0x8
 729 0347 00       		.byte	0
 730 0348 05       		.uleb128 0x5
 731 0349 2C010000 		.4byte	0x12c
 732 034d 14       		.uleb128 0x14
 733 034e 20000000 		.4byte	.LASF56
 734 0352 04       		.byte	0x4
 735 0353 79       		.byte	0x79
 736 0354 58030000 		.4byte	0x358
 737 0358 05       		.uleb128 0x5
 738 0359 38030000 		.4byte	0x338
 739 035d 15       		.uleb128 0x15
 740 035e 57030000 		.4byte	.LASF57
 741 0362 57030000 		.4byte	.LASF57
 742 0366 04       		.byte	0x4
 743 0367 A4       		.byte	0xa4
 744 0368 00       		.byte	0
 745              		.section	.debug_abbrev,"",%progbits
 746              	.Ldebug_abbrev0:
 747 0000 01       		.uleb128 0x1
 748 0001 11       		.uleb128 0x11
 749 0002 01       		.byte	0x1
 750 0003 25       		.uleb128 0x25
 751 0004 0E       		.uleb128 0xe
 752 0005 13       		.uleb128 0x13
 753 0006 0B       		.uleb128 0xb
 754 0007 03       		.uleb128 0x3
 755 0008 0E       		.uleb128 0xe
 756 0009 1B       		.uleb128 0x1b
 757 000a 0E       		.uleb128 0xe
 758 000b 55       		.uleb128 0x55
 759 000c 17       		.uleb128 0x17
 760 000d 11       		.uleb128 0x11
 761 000e 01       		.uleb128 0x1
 762 000f 10       		.uleb128 0x10
 763 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 31


 764 0011 00       		.byte	0
 765 0012 00       		.byte	0
 766 0013 02       		.uleb128 0x2
 767 0014 24       		.uleb128 0x24
 768 0015 00       		.byte	0
 769 0016 0B       		.uleb128 0xb
 770 0017 0B       		.uleb128 0xb
 771 0018 3E       		.uleb128 0x3e
 772 0019 0B       		.uleb128 0xb
 773 001a 03       		.uleb128 0x3
 774 001b 0E       		.uleb128 0xe
 775 001c 00       		.byte	0
 776 001d 00       		.byte	0
 777 001e 03       		.uleb128 0x3
 778 001f 24       		.uleb128 0x24
 779 0020 00       		.byte	0
 780 0021 0B       		.uleb128 0xb
 781 0022 0B       		.uleb128 0xb
 782 0023 3E       		.uleb128 0x3e
 783 0024 0B       		.uleb128 0xb
 784 0025 03       		.uleb128 0x3
 785 0026 08       		.uleb128 0x8
 786 0027 00       		.byte	0
 787 0028 00       		.byte	0
 788 0029 04       		.uleb128 0x4
 789 002a 16       		.uleb128 0x16
 790 002b 00       		.byte	0
 791 002c 03       		.uleb128 0x3
 792 002d 0E       		.uleb128 0xe
 793 002e 3A       		.uleb128 0x3a
 794 002f 0B       		.uleb128 0xb
 795 0030 3B       		.uleb128 0x3b
 796 0031 05       		.uleb128 0x5
 797 0032 49       		.uleb128 0x49
 798 0033 13       		.uleb128 0x13
 799 0034 00       		.byte	0
 800 0035 00       		.byte	0
 801 0036 05       		.uleb128 0x5
 802 0037 35       		.uleb128 0x35
 803 0038 00       		.byte	0
 804 0039 49       		.uleb128 0x49
 805 003a 13       		.uleb128 0x13
 806 003b 00       		.byte	0
 807 003c 00       		.byte	0
 808 003d 06       		.uleb128 0x6
 809 003e 13       		.uleb128 0x13
 810 003f 01       		.byte	0x1
 811 0040 0B       		.uleb128 0xb
 812 0041 0B       		.uleb128 0xb
 813 0042 3A       		.uleb128 0x3a
 814 0043 0B       		.uleb128 0xb
 815 0044 3B       		.uleb128 0x3b
 816 0045 0B       		.uleb128 0xb
 817 0046 01       		.uleb128 0x1
 818 0047 13       		.uleb128 0x13
 819 0048 00       		.byte	0
 820 0049 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 32


 821 004a 07       		.uleb128 0x7
 822 004b 0D       		.uleb128 0xd
 823 004c 00       		.byte	0
 824 004d 03       		.uleb128 0x3
 825 004e 0E       		.uleb128 0xe
 826 004f 3A       		.uleb128 0x3a
 827 0050 0B       		.uleb128 0xb
 828 0051 3B       		.uleb128 0x3b
 829 0052 0B       		.uleb128 0xb
 830 0053 49       		.uleb128 0x49
 831 0054 13       		.uleb128 0x13
 832 0055 38       		.uleb128 0x38
 833 0056 0B       		.uleb128 0xb
 834 0057 00       		.byte	0
 835 0058 00       		.byte	0
 836 0059 08       		.uleb128 0x8
 837 005a 16       		.uleb128 0x16
 838 005b 00       		.byte	0
 839 005c 03       		.uleb128 0x3
 840 005d 0E       		.uleb128 0xe
 841 005e 3A       		.uleb128 0x3a
 842 005f 0B       		.uleb128 0xb
 843 0060 3B       		.uleb128 0x3b
 844 0061 0B       		.uleb128 0xb
 845 0062 49       		.uleb128 0x49
 846 0063 13       		.uleb128 0x13
 847 0064 00       		.byte	0
 848 0065 00       		.byte	0
 849 0066 09       		.uleb128 0x9
 850 0067 0D       		.uleb128 0xd
 851 0068 00       		.byte	0
 852 0069 03       		.uleb128 0x3
 853 006a 08       		.uleb128 0x8
 854 006b 3A       		.uleb128 0x3a
 855 006c 0B       		.uleb128 0xb
 856 006d 3B       		.uleb128 0x3b
 857 006e 0B       		.uleb128 0xb
 858 006f 49       		.uleb128 0x49
 859 0070 13       		.uleb128 0x13
 860 0071 38       		.uleb128 0x38
 861 0072 0B       		.uleb128 0xb
 862 0073 00       		.byte	0
 863 0074 00       		.byte	0
 864 0075 0A       		.uleb128 0xa
 865 0076 01       		.uleb128 0x1
 866 0077 01       		.byte	0x1
 867 0078 49       		.uleb128 0x49
 868 0079 13       		.uleb128 0x13
 869 007a 01       		.uleb128 0x1
 870 007b 13       		.uleb128 0x13
 871 007c 00       		.byte	0
 872 007d 00       		.byte	0
 873 007e 0B       		.uleb128 0xb
 874 007f 21       		.uleb128 0x21
 875 0080 00       		.byte	0
 876 0081 49       		.uleb128 0x49
 877 0082 13       		.uleb128 0x13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 33


 878 0083 2F       		.uleb128 0x2f
 879 0084 0B       		.uleb128 0xb
 880 0085 00       		.byte	0
 881 0086 00       		.byte	0
 882 0087 0C       		.uleb128 0xc
 883 0088 13       		.uleb128 0x13
 884 0089 01       		.byte	0x1
 885 008a 0B       		.uleb128 0xb
 886 008b 0B       		.uleb128 0xb
 887 008c 3A       		.uleb128 0x3a
 888 008d 0B       		.uleb128 0xb
 889 008e 3B       		.uleb128 0x3b
 890 008f 05       		.uleb128 0x5
 891 0090 01       		.uleb128 0x1
 892 0091 13       		.uleb128 0x13
 893 0092 00       		.byte	0
 894 0093 00       		.byte	0
 895 0094 0D       		.uleb128 0xd
 896 0095 0D       		.uleb128 0xd
 897 0096 00       		.byte	0
 898 0097 03       		.uleb128 0x3
 899 0098 0E       		.uleb128 0xe
 900 0099 3A       		.uleb128 0x3a
 901 009a 0B       		.uleb128 0xb
 902 009b 3B       		.uleb128 0x3b
 903 009c 05       		.uleb128 0x5
 904 009d 49       		.uleb128 0x49
 905 009e 13       		.uleb128 0x13
 906 009f 38       		.uleb128 0x38
 907 00a0 0B       		.uleb128 0xb
 908 00a1 00       		.byte	0
 909 00a2 00       		.byte	0
 910 00a3 0E       		.uleb128 0xe
 911 00a4 2E       		.uleb128 0x2e
 912 00a5 00       		.byte	0
 913 00a6 3F       		.uleb128 0x3f
 914 00a7 19       		.uleb128 0x19
 915 00a8 03       		.uleb128 0x3
 916 00a9 0E       		.uleb128 0xe
 917 00aa 3A       		.uleb128 0x3a
 918 00ab 0B       		.uleb128 0xb
 919 00ac 3B       		.uleb128 0x3b
 920 00ad 0B       		.uleb128 0xb
 921 00ae 27       		.uleb128 0x27
 922 00af 19       		.uleb128 0x19
 923 00b0 11       		.uleb128 0x11
 924 00b1 01       		.uleb128 0x1
 925 00b2 12       		.uleb128 0x12
 926 00b3 06       		.uleb128 0x6
 927 00b4 40       		.uleb128 0x40
 928 00b5 18       		.uleb128 0x18
 929 00b6 9742     		.uleb128 0x2117
 930 00b8 19       		.uleb128 0x19
 931 00b9 00       		.byte	0
 932 00ba 00       		.byte	0
 933 00bb 0F       		.uleb128 0xf
 934 00bc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 34


 935 00bd 00       		.byte	0
 936 00be 3F       		.uleb128 0x3f
 937 00bf 19       		.uleb128 0x19
 938 00c0 03       		.uleb128 0x3
 939 00c1 0E       		.uleb128 0xe
 940 00c2 3A       		.uleb128 0x3a
 941 00c3 0B       		.uleb128 0xb
 942 00c4 3B       		.uleb128 0x3b
 943 00c5 05       		.uleb128 0x5
 944 00c6 27       		.uleb128 0x27
 945 00c7 19       		.uleb128 0x19
 946 00c8 11       		.uleb128 0x11
 947 00c9 01       		.uleb128 0x1
 948 00ca 12       		.uleb128 0x12
 949 00cb 06       		.uleb128 0x6
 950 00cc 40       		.uleb128 0x40
 951 00cd 18       		.uleb128 0x18
 952 00ce 9742     		.uleb128 0x2117
 953 00d0 19       		.uleb128 0x19
 954 00d1 00       		.byte	0
 955 00d2 00       		.byte	0
 956 00d3 10       		.uleb128 0x10
 957 00d4 2E       		.uleb128 0x2e
 958 00d5 01       		.byte	0x1
 959 00d6 3F       		.uleb128 0x3f
 960 00d7 19       		.uleb128 0x19
 961 00d8 03       		.uleb128 0x3
 962 00d9 0E       		.uleb128 0xe
 963 00da 3A       		.uleb128 0x3a
 964 00db 0B       		.uleb128 0xb
 965 00dc 3B       		.uleb128 0x3b
 966 00dd 05       		.uleb128 0x5
 967 00de 27       		.uleb128 0x27
 968 00df 19       		.uleb128 0x19
 969 00e0 11       		.uleb128 0x11
 970 00e1 01       		.uleb128 0x1
 971 00e2 12       		.uleb128 0x12
 972 00e3 06       		.uleb128 0x6
 973 00e4 40       		.uleb128 0x40
 974 00e5 18       		.uleb128 0x18
 975 00e6 9742     		.uleb128 0x2117
 976 00e8 19       		.uleb128 0x19
 977 00e9 01       		.uleb128 0x1
 978 00ea 13       		.uleb128 0x13
 979 00eb 00       		.byte	0
 980 00ec 00       		.byte	0
 981 00ed 11       		.uleb128 0x11
 982 00ee 898201   		.uleb128 0x4109
 983 00f1 00       		.byte	0
 984 00f2 11       		.uleb128 0x11
 985 00f3 01       		.uleb128 0x1
 986 00f4 31       		.uleb128 0x31
 987 00f5 13       		.uleb128 0x13
 988 00f6 00       		.byte	0
 989 00f7 00       		.byte	0
 990 00f8 12       		.uleb128 0x12
 991 00f9 34       		.uleb128 0x34
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 35


 992 00fa 00       		.byte	0
 993 00fb 03       		.uleb128 0x3
 994 00fc 0E       		.uleb128 0xe
 995 00fd 3A       		.uleb128 0x3a
 996 00fe 0B       		.uleb128 0xb
 997 00ff 3B       		.uleb128 0x3b
 998 0100 05       		.uleb128 0x5
 999 0101 49       		.uleb128 0x49
 1000 0102 13       		.uleb128 0x13
 1001 0103 02       		.uleb128 0x2
 1002 0104 17       		.uleb128 0x17
 1003 0105 00       		.byte	0
 1004 0106 00       		.byte	0
 1005 0107 13       		.uleb128 0x13
 1006 0108 34       		.uleb128 0x34
 1007 0109 00       		.byte	0
 1008 010a 03       		.uleb128 0x3
 1009 010b 08       		.uleb128 0x8
 1010 010c 3A       		.uleb128 0x3a
 1011 010d 0B       		.uleb128 0xb
 1012 010e 3B       		.uleb128 0x3b
 1013 010f 05       		.uleb128 0x5
 1014 0110 49       		.uleb128 0x49
 1015 0111 13       		.uleb128 0x13
 1016 0112 02       		.uleb128 0x2
 1017 0113 17       		.uleb128 0x17
 1018 0114 00       		.byte	0
 1019 0115 00       		.byte	0
 1020 0116 14       		.uleb128 0x14
 1021 0117 34       		.uleb128 0x34
 1022 0118 00       		.byte	0
 1023 0119 03       		.uleb128 0x3
 1024 011a 0E       		.uleb128 0xe
 1025 011b 3A       		.uleb128 0x3a
 1026 011c 0B       		.uleb128 0xb
 1027 011d 3B       		.uleb128 0x3b
 1028 011e 0B       		.uleb128 0xb
 1029 011f 49       		.uleb128 0x49
 1030 0120 13       		.uleb128 0x13
 1031 0121 3F       		.uleb128 0x3f
 1032 0122 19       		.uleb128 0x19
 1033 0123 3C       		.uleb128 0x3c
 1034 0124 19       		.uleb128 0x19
 1035 0125 00       		.byte	0
 1036 0126 00       		.byte	0
 1037 0127 15       		.uleb128 0x15
 1038 0128 2E       		.uleb128 0x2e
 1039 0129 00       		.byte	0
 1040 012a 3F       		.uleb128 0x3f
 1041 012b 19       		.uleb128 0x19
 1042 012c 3C       		.uleb128 0x3c
 1043 012d 19       		.uleb128 0x19
 1044 012e 6E       		.uleb128 0x6e
 1045 012f 0E       		.uleb128 0xe
 1046 0130 03       		.uleb128 0x3
 1047 0131 0E       		.uleb128 0xe
 1048 0132 3A       		.uleb128 0x3a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 36


 1049 0133 0B       		.uleb128 0xb
 1050 0134 3B       		.uleb128 0x3b
 1051 0135 0B       		.uleb128 0xb
 1052 0136 00       		.byte	0
 1053 0137 00       		.byte	0
 1054 0138 00       		.byte	0
 1055              		.section	.debug_loc,"",%progbits
 1056              	.Ldebug_loc0:
 1057              	.LLST0:
 1058 0000 08000000 		.4byte	.LVL2
 1059 0004 8E000000 		.4byte	.LVL9
 1060 0008 0100     		.2byte	0x1
 1061 000a 54       		.byte	0x54
 1062 000b 00000000 		.4byte	0
 1063 000f 00000000 		.4byte	0
 1064              	.LLST1:
 1065 0013 20000000 		.4byte	.LVL4
 1066 0017 82000000 		.4byte	.LVL5
 1067 001b 0100     		.2byte	0x1
 1068 001d 51       		.byte	0x51
 1069 001e 00000000 		.4byte	0
 1070 0022 00000000 		.4byte	0
 1071              	.LLST2:
 1072 0026 02000000 		.4byte	.LVL1
 1073 002a 0C000000 		.4byte	.LVL3
 1074 002e 0200     		.2byte	0x2
 1075 0030 31       		.byte	0x31
 1076 0031 9F       		.byte	0x9f
 1077 0032 0C000000 		.4byte	.LVL3
 1078 0036 84000000 		.4byte	.LVL6
 1079 003a 0100     		.2byte	0x1
 1080 003c 53       		.byte	0x53
 1081 003d 86000000 		.4byte	.LVL7
 1082 0041 A4000000 		.4byte	.LFE5
 1083 0045 0100     		.2byte	0x1
 1084 0047 53       		.byte	0x53
 1085 0048 00000000 		.4byte	0
 1086 004c 00000000 		.4byte	0
 1087              		.section	.debug_aranges,"",%progbits
 1088 0000 44000000 		.4byte	0x44
 1089 0004 0200     		.2byte	0x2
 1090 0006 00000000 		.4byte	.Ldebug_info0
 1091 000a 04       		.byte	0x4
 1092 000b 00       		.byte	0
 1093 000c 0000     		.2byte	0
 1094 000e 0000     		.2byte	0
 1095 0010 00000000 		.4byte	.LFB0
 1096 0014 30000000 		.4byte	.LFE0-.LFB0
 1097 0018 00000000 		.4byte	.LFB1
 1098 001c 34000000 		.4byte	.LFE1-.LFB1
 1099 0020 00000000 		.4byte	.LFB2
 1100 0024 3C000000 		.4byte	.LFE2-.LFB2
 1101 0028 00000000 		.4byte	.LFB3
 1102 002c 02000000 		.4byte	.LFE3-.LFB3
 1103 0030 00000000 		.4byte	.LFB4
 1104 0034 08000000 		.4byte	.LFE4-.LFB4
 1105 0038 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 37


 1106 003c A4000000 		.4byte	.LFE5-.LFB5
 1107 0040 00000000 		.4byte	0
 1108 0044 00000000 		.4byte	0
 1109              		.section	.debug_ranges,"",%progbits
 1110              	.Ldebug_ranges0:
 1111 0000 00000000 		.4byte	.LFB0
 1112 0004 30000000 		.4byte	.LFE0
 1113 0008 00000000 		.4byte	.LFB1
 1114 000c 34000000 		.4byte	.LFE1
 1115 0010 00000000 		.4byte	.LFB2
 1116 0014 3C000000 		.4byte	.LFE2
 1117 0018 00000000 		.4byte	.LFB3
 1118 001c 02000000 		.4byte	.LFE3
 1119 0020 00000000 		.4byte	.LFB4
 1120 0024 08000000 		.4byte	.LFE4
 1121 0028 00000000 		.4byte	.LFB5
 1122 002c A4000000 		.4byte	.LFE5
 1123 0030 00000000 		.4byte	0
 1124 0034 00000000 		.4byte	0
 1125              		.section	.debug_line,"",%progbits
 1126              	.Ldebug_line0:
 1127 0000 1C010000 		.section	.debug_str,"MS",%progbits,1
 1127      02006E00 
 1127      00000201 
 1127      FB0E0D00 
 1127      01010101 
 1128              	.LASF43:
 1129 0000 61726245 		.ascii	"arbEp\000"
 1129      7000
 1130              	.LASF39:
 1131 0006 72774472 		.ascii	"rwDr\000"
 1131      00
 1132              	.LASF29:
 1133 000b 65704372 		.ascii	"epCr0\000"
 1133      3000
 1134              	.LASF11:
 1135 0011 666C6F61 		.ascii	"float\000"
 1135      7400
 1136              	.LASF34:
 1137 0017 72657365 		.ascii	"reserved\000"
 1137      72766564 
 1137      00
 1138              	.LASF56:
 1139 0020 55534255 		.ascii	"USBUART_1_EP\000"
 1139      4152545F 
 1139      315F4550 
 1139      00
 1140              	.LASF3:
 1141 002d 73686F72 		.ascii	"short unsigned int\000"
 1141      7420756E 
 1141      7369676E 
 1141      65642069 
 1141      6E7400
 1142              	.LASF31:
 1143 0040 65704366 		.ascii	"epCfg\000"
 1143      6700
 1144              	.LASF45:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 38


 1145 0046 55534255 		.ascii	"USBUART_1_EP_1_ISR\000"
 1145      4152545F 
 1145      315F4550 
 1145      5F315F49 
 1145      535200
 1146              	.LASF52:
 1147 0059 65705374 		.ascii	"epStatus\000"
 1147      61747573 
 1147      00
 1148              	.LASF51:
 1149 0062 61726249 		.ascii	"arbIntrStatus\000"
 1149      6E747253 
 1149      74617475 
 1149      7300
 1150              	.LASF27:
 1151 0070 6570436E 		.ascii	"epCnt0\000"
 1151      743000
 1152              	.LASF28:
 1153 0077 6570436E 		.ascii	"epCnt1\000"
 1153      743100
 1154              	.LASF20:
 1155 007e 6570546F 		.ascii	"epToggle\000"
 1155      67676C65 
 1155      00
 1156              	.LASF1:
 1157 0087 756E7369 		.ascii	"unsigned char\000"
 1157      676E6564 
 1157      20636861 
 1157      7200
 1158              	.LASF53:
 1159 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1159      43313120 
 1159      352E342E 
 1159      31203230 
 1159      31363036 
 1160 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1160      20726576 
 1160      6973696F 
 1160      6E203233 
 1160      37373135 
 1161 00fb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1161      66756E63 
 1161      74696F6E 
 1161      2D736563 
 1161      74696F6E 
 1162              	.LASF14:
 1163 0123 72656738 		.ascii	"reg8\000"
 1163      00
 1164              	.LASF5:
 1165 0128 6C6F6E67 		.ascii	"long unsigned int\000"
 1165      20756E73 
 1165      69676E65 
 1165      6420696E 
 1165      7400
 1166              	.LASF21:
 1167 013a 61646472 		.ascii	"addr\000"
 1167      00
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 39


 1168              	.LASF33:
 1169 013f 65705372 		.ascii	"epSr\000"
 1169      00
 1170              	.LASF46:
 1171 0144 55534255 		.ascii	"USBUART_1_EP_2_ISR\000"
 1171      4152545F 
 1171      315F4550 
 1171      5F325F49 
 1171      535200
 1172              	.LASF38:
 1173 0157 72775261 		.ascii	"rwRaMsb\000"
 1173      4D736200 
 1174              	.LASF35:
 1175 015f 72775761 		.ascii	"rwWa\000"
 1175      00
 1176              	.LASF12:
 1177 0164 646F7562 		.ascii	"double\000"
 1177      6C6500
 1178              	.LASF17:
 1179 016b 61747472 		.ascii	"attrib\000"
 1179      696200
 1180              	.LASF49:
 1181 0172 55534255 		.ascii	"USBUART_1_BUS_RESET_ISR\000"
 1181      4152545F 
 1181      315F4255 
 1181      535F5245 
 1181      5345545F 
 1182              	.LASF48:
 1183 018a 55534255 		.ascii	"USBUART_1_SOF_ISR\000"
 1183      4152545F 
 1183      315F534F 
 1183      465F4953 
 1183      5200
 1184              	.LASF36:
 1185 019c 72775761 		.ascii	"rwWaMsb\000"
 1185      4D736200 
 1186              	.LASF10:
 1187 01a4 75696E74 		.ascii	"uint16\000"
 1187      313600
 1188              	.LASF18:
 1189 01ab 61706945 		.ascii	"apiEpState\000"
 1189      70537461 
 1189      746500
 1190              	.LASF40:
 1191 01b6 55534255 		.ascii	"USBUART_1_arb_ep_struct\000"
 1191      4152545F 
 1191      315F6172 
 1191      625F6570 
 1191      5F737472 
 1192              	.LASF54:
 1193 01ce 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_1_episr.c\000"
 1193      72617465 
 1193      645F536F 
 1193      75726365 
 1193      5C50536F 
 1194              	.LASF8:
 1195 01f7 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 40


 1195      676E6564 
 1195      20696E74 
 1195      00
 1196              	.LASF42:
 1197 0204 55534255 		.ascii	"USBUART_1_sie_eps_struct\000"
 1197      4152545F 
 1197      315F7369 
 1197      655F6570 
 1197      735F7374 
 1198              	.LASF7:
 1199 021d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1199      206C6F6E 
 1199      6720756E 
 1199      7369676E 
 1199      65642069 
 1200              	.LASF19:
 1201 0234 68774570 		.ascii	"hwEpState\000"
 1201      53746174 
 1201      6500
 1202              	.LASF32:
 1203 023e 6570496E 		.ascii	"epIntEn\000"
 1203      74456E00 
 1204              	.LASF47:
 1205 0246 55534255 		.ascii	"USBUART_1_EP_3_ISR\000"
 1205      4152545F 
 1205      315F4550 
 1205      5F335F49 
 1205      535200
 1206              	.LASF16:
 1207 0259 73697A65 		.ascii	"sizetype\000"
 1207      74797065 
 1207      00
 1208              	.LASF30:
 1209 0262 55534255 		.ascii	"USBUART_1_sie_ep_struct\000"
 1209      4152545F 
 1209      315F7369 
 1209      655F6570 
 1209      5F737472 
 1210              	.LASF22:
 1211 027a 65704D6F 		.ascii	"epMode\000"
 1211      646500
 1212              	.LASF6:
 1213 0281 6C6F6E67 		.ascii	"long long int\000"
 1213      206C6F6E 
 1213      6720696E 
 1213      7400
 1214              	.LASF26:
 1215 028f 545F5553 		.ascii	"T_USBUART_1_EP_CTL_BLOCK\000"
 1215      42554152 
 1215      545F315F 
 1215      45505F43 
 1215      544C5F42 
 1216              	.LASF13:
 1217 02a8 63686172 		.ascii	"char\000"
 1217      00
 1218              	.LASF44:
 1219 02ad 55534255 		.ascii	"USBUART_1_arb_eps_struct\000"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 41


 1219      4152545F 
 1219      315F6172 
 1219      625F6570 
 1219      735F7374 
 1220              	.LASF24:
 1221 02c6 62756666 		.ascii	"bufferSize\000"
 1221      65725369 
 1221      7A6500
 1222              	.LASF2:
 1223 02d1 73686F72 		.ascii	"short int\000"
 1223      7420696E 
 1223      7400
 1224              	.LASF37:
 1225 02db 72775261 		.ascii	"rwRa\000"
 1225      00
 1226              	.LASF9:
 1227 02e0 75696E74 		.ascii	"uint8\000"
 1227      3800
 1228              	.LASF25:
 1229 02e6 696E7465 		.ascii	"interface\000"
 1229      72666163 
 1229      6500
 1230              	.LASF50:
 1231 02f0 55534255 		.ascii	"USBUART_1_ARB_ISR\000"
 1231      4152545F 
 1231      315F4152 
 1231      425F4953 
 1231      5200
 1232              	.LASF4:
 1233 0302 6C6F6E67 		.ascii	"long int\000"
 1233      20696E74 
 1233      00
 1234              	.LASF23:
 1235 030b 62756666 		.ascii	"buffOffset\000"
 1235      4F666673 
 1235      657400
 1236              	.LASF15:
 1237 0316 6C6F6E67 		.ascii	"long double\000"
 1237      20646F75 
 1237      626C6500 
 1238              	.LASF0:
 1239 0322 7369676E 		.ascii	"signed char\000"
 1239      65642063 
 1239      68617200 
 1240              	.LASF55:
 1241 032e 473A5C44 		.ascii	"G:\\DSA\\PORIGE\\Workspace03\\Design01.cydsn\000"
 1241      53415C50 
 1241      4F524947 
 1241      455C576F 
 1241      726B7370 
 1242              	.LASF57:
 1243 0357 55534255 		.ascii	"USBUART_1_ReInitComponent\000"
 1243      4152545F 
 1243      315F5265 
 1243      496E6974 
 1243      436F6D70 
 1244              	.LASF41:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWI2T8c.s 			page 42


 1245 0371 73696545 		.ascii	"sieEp\000"
 1245      7000
 1246              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
