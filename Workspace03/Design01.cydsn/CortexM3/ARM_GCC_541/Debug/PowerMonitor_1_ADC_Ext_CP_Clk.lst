ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PowerMonitor_1_ADC_Ext_CP_Clk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_Start,"ax",%progbits
  20              		.align	2
  21              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_Start, %function
  25              	PowerMonitor_1_ADC_Ext_CP_Clk_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\PowerMonitor_1_ADC_Ext_CP_Clk.c"
   1:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * File Name: PowerMonitor_1_ADC_Ext_CP_Clk.c
   3:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Version 1.70
   4:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
   5:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Description:
   6:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
   8:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Note:
   9:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  10:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
  11:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************/
  16:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  17:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #include "PowerMonitor_1_ADC_Ext_CP_Clk.h"
  19:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  20:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  27:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  29:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  30:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 2


  31:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_Start
  32:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
  33:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
  34:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  35:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  "Start on Reset" option is enabled in the DWR.
  36:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  37:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
  38:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  39:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  40:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
  41:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  42:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  43:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
  44:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_Start(void) 
  45:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
  28              		.loc 1 45 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  46:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     /* Set the bit to enable the clock. */
  47:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN |= PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
  33              		.loc 1 47 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F00803 		orr	r3, r3, #8
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c A2430040 		.word	1073759138
  43              		.cfi_endproc
  44              	.LFE0:
  45              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_Start, .-PowerMonitor_1_ADC_Ext_CP_Clk_Start
  46              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_Stop, %function
  52              	PowerMonitor_1_ADC_Ext_CP_Clk_Stop:
  53              	.LFB1:
  48:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
  49:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  50:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  51:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
  52:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_Stop
  53:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
  54:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
  55:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Stops the clock and returns immediately. This API does not require the
  56:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  source clock to be running but may return before the hardware is actually
  57:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  disabled. If the settings of the clock are changed after calling this
  58:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  59:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  glitch, use the StopBlock function.
  60:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  61:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 3


  62:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  63:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  64:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
  65:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  66:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  67:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
  68:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_Stop(void) 
  69:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
  54              		.loc 1 69 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  70:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     /* Clear the bit to disable the clock. */
  71:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN &= ~PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
  59              		.loc 1 71 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F0F703 		and	r3, r3, #247
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c A2430040 		.word	1073759138
  69              		.cfi_endproc
  70              	.LFE1:
  71              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_Stop, .-PowerMonitor_1_ADC_Ext_CP_Clk_Stop
  72              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock,"ax",%progbits
  73              		.align	2
  74              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock
  75              		.thumb
  76              		.thumb_func
  77              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock, %function
  78              	PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock:
  79              	.LFB2:
  72:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
  73:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  74:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
  75:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  76:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
  77:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock
  78:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
  79:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
  80:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  81:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  82:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  83:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Note that the source clock must be running or this API will never return as
  84:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  a stopped clock cannot be disabled.
  85:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  86:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
  87:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  88:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  89:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
  90:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
  91:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
  92:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 4


  93:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock(void) 
  94:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
  80              		.loc 1 94 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  95:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     if (PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN & PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK)
  85              		.loc 1 95 0
  86 0000 144B     		ldr	r3, .L10
  87 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88 0004 13F0080F 		tst	r3, #8
  89 0008 22D0     		beq	.L7
  90              	.LBB2:
  96:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
  97:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
  98:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         uint16 oldDivider;
  99:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 100:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0;
  91              		.loc 1 100 0
  92 000a 1349     		ldr	r1, .L10+4
  93 000c 0023     		movs	r3, #0
  94 000e 0B70     		strb	r3, [r1]
 101:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 102:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Clear all the mask bits except ours. */
 103:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if defined(PowerMonitor_1_ADC_Ext_CP_Clk__CFG3)
 104:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 105:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = 0x00u;
 106:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #else
 107:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
  95              		.loc 1 107 0
  96 0010 0820     		movs	r0, #8
  97 0012 124A     		ldr	r2, .L10+8
  98 0014 1070     		strb	r0, [r2]
 108:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = 0x00u;
  99              		.loc 1 108 0
 100 0016 0432     		adds	r2, r2, #4
 101 0018 1370     		strb	r3, [r2]
 109:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 110:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 111:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Clear mask of bus clock. */
 112:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 102              		.loc 1 112 0
 103 001a 0C3A     		subs	r2, r2, #12
 104 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 105 001e 03F07F03 		and	r3, r3, #127
 106 0022 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 114:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         oldDivider = CY_GET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR);
 107              		.loc 1 114 0
 108 0024 0E4B     		ldr	r3, .L10+12
 109 0026 1A88     		ldrh	r2, [r3]
 110 0028 92B2     		uxth	r2, r2
 111              	.LVL0:
 115:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 112              		.loc 1 115 0
 113 002a 8A3B     		subs	r3, r3, #138
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 5


 114 002c 1A80     		strh	r2, [r3]	@ movhi
 116:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 115              		.loc 1 116 0
 116 002e 0723     		movs	r3, #7
 117 0030 0B70     		strb	r3, [r1]
 118              	.L9:
 117:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 118:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Wait for clock to be disabled */
 119:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 119              		.loc 1 119 0 discriminator 1
 120 0032 094B     		ldr	r3, .L10+4
 121 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 0036 13F0010F 		tst	r3, #1
 123 003a FAD1     		bne	.L9
 120:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 121:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 122:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Clear the bit to disable the clock. */
 123:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN &= ~PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 124              		.loc 1 123 0
 125 003c 0549     		ldr	r1, .L10
 126 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 127 0040 03F0F703 		and	r3, r3, #247
 128 0044 0B70     		strb	r3, [r1]
 124:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 125:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 126:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Clear the disable bit */
 127:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0x00u;
 129              		.loc 1 127 0
 130 0046 0021     		movs	r1, #0
 131 0048 034B     		ldr	r3, .L10+4
 132 004a 1970     		strb	r1, [r3]
 128:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         CY_SET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR, oldDivider);
 133              		.loc 1 128 0
 134 004c 8B33     		adds	r3, r3, #139
 135 004e 1A80     		strh	r2, [r3]	@ movhi
 136              	.LVL1:
 137              	.L7:
 138 0050 7047     		bx	lr
 139              	.L11:
 140 0052 00BF     		.align	2
 141              	.L10:
 142 0054 A2430040 		.word	1073759138
 143 0058 01400040 		.word	1073758209
 144 005c 10400040 		.word	1073758224
 145 0060 8C400040 		.word	1073758348
 146              	.LBE2:
 147              		.cfi_endproc
 148              	.LFE2:
 149              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock, .-PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock
 150              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower,"ax",%progbits
 151              		.align	2
 152              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower
 153              		.thumb
 154              		.thumb_func
 155              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower, %function
 156              	PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower:
 157              	.LFB3:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 6


 129:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 130:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 131:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 132:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 133:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 134:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 135:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower
 136:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 137:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 138:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Sets whether the clock is active in standby mode.
 139:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 140:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 141:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 142:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 143:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 144:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 145:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 146:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 147:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower(uint8 state) 
 148:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 158              		.loc 1 148 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL2:
 149:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     if(state == 0)
 164              		.loc 1 149 0
 165 0000 28B9     		cbnz	r0, .L13
 150:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 151:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_CLKSTBY &= ~PowerMonitor_1_ADC_Ext_CP_Clk_CLKSTBY_MASK;
 166              		.loc 1 151 0
 167 0002 064A     		ldr	r2, .L15
 168 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 169 0006 03F0F703 		and	r3, r3, #247
 170 000a 1370     		strb	r3, [r2]
 171 000c 7047     		bx	lr
 172              	.L13:
 152:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 153:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     else
 154:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 155:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_CLKSTBY |= PowerMonitor_1_ADC_Ext_CP_Clk_CLKSTBY_MASK;
 173              		.loc 1 155 0
 174 000e 034A     		ldr	r2, .L15
 175 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 176 0012 43F00803 		orr	r3, r3, #8
 177 0016 1370     		strb	r3, [r2]
 178 0018 7047     		bx	lr
 179              	.L16:
 180 001a 00BF     		.align	2
 181              	.L15:
 182 001c B2430040 		.word	1073759154
 183              		.cfi_endproc
 184              	.LFE3:
 185              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower, .-PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower
 186              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister,"ax",%progbits
 187              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 7


 188              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister
 189              		.thumb
 190              		.thumb_func
 191              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister, %function
 192              	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister:
 193              	.LFB5:
 156:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 157:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 158:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 159:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 160:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 161:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister
 162:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 163:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 164:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 165:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 166:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 167:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  SetDividerRegister is called, then the source clock must be running.
 168:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 169:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 170:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 171:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 172:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 173:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 174:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   will be truncated and the new divide value will take effect immediately. If
 175:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   zero, the new divide value will take effect at the end of the current clock
 176:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   cycle.
 177:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 178:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 179:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 180:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 181:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 182:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister(uint16 clkDivider, uint8 restart) 
 183:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 184:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint8 enabled;
 185:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 186:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint8 currSrc = PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister();
 187:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint16 oldDivider = PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister();
 188:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 189:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     if (clkDivider != oldDivider)
 190:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 191:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         enabled = PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN & PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 192:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 193:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         if (currSrc == CYCLK_SRC_SEL_CLK_SYNC_D && (oldDivider == 0 || clkDivider == 0))
 194:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         {
 195:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 196:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             if (oldDivider == 0 && clkDivider != 0)
 197:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 198:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 199:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 200:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* divider is ignored while SSS is set.                                     */
 201:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 202:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 203:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 204:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             else
 205:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 206:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 8


 207:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* it without bothering with the shadow load.                               */
 208:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 209:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 210:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 211:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         }
 212:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         else
 213:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         {
 214:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             if (enabled)
 215:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 216:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 217:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 218:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Clear all the mask bits except ours. */
 219:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if defined(PowerMonitor_1_ADC_Ext_CP_Clk__CFG3)
 220:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 221:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = 0x00u;
 222:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #else
 223:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 224:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 225:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 226:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Clear mask of bus clock. */
 227:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 228:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 229:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 230:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 231:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 232:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 233:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Wait for clock to be disabled */
 234:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 235:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 236:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 237:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN &= ~PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK;
 238:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 239:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 240:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* Clear the disable bit */
 241:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 242:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 243:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 244:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 245:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             /* Load divide value. */
 246:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             if (PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN & PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN_MASK)
 247:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 248:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* If the clock is still enabled, use the shadow registers */
 249:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 250:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 251:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | (restart ? CYCLK_LD_SYNC_EN : 0x00u));
 252:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 253:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 254:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             else
 255:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 256:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 /* If the clock is disabled, set the divider directly */
 257:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 258:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 259:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 260:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             PowerMonitor_1_ADC_Ext_CP_Clk_CLKEN |= enabled;
 261:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         }
 262:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 263:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 9


 264:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 265:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 266:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 267:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister
 268:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 269:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 270:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Gets the clock divider register value.
 271:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 272:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 273:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 274:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 275:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 276:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 277:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  divide by 2, the return value will be 1.
 278:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 279:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 280:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** uint16 PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister(void) 
 281:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 194              		.loc 1 281 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 282:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     return CY_GET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR);
 199              		.loc 1 282 0
 200 0000 014B     		ldr	r3, .L18
 201 0002 1888     		ldrh	r0, [r3]
 283:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 202              		.loc 1 283 0
 203 0004 80B2     		uxth	r0, r0
 204 0006 7047     		bx	lr
 205              	.L19:
 206              		.align	2
 207              	.L18:
 208 0008 8C400040 		.word	1073758348
 209              		.cfi_endproc
 210              	.LFE5:
 211              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_GetDivider
 212              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister,"ax",%progbits
 213              		.align	2
 214              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister
 215              		.thumb
 216              		.thumb_func
 217              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister, %function
 218              	PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister:
 219              	.LFB6:
 284:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 285:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 286:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister
 288:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 289:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 290:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Sets flags that control the operating mode of the clock. This function only
 291:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 292:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 293:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 294:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 10


 295:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 296:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 297:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 298:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 299:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 300:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 value.
 301:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 302:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 303:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 304:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 source clock.
 305:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 306:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 307:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 308:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 309:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 310:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 311:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 312:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 313:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 314:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister(uint8 clkMode) 
 315:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 220              		.loc 1 315 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL3:
 316:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC |= clkMode & PowerMonitor_1_ADC_Ext_CP_Clk_MODE_MASK;
 226              		.loc 1 316 0
 227 0000 034B     		ldr	r3, .L21
 228 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 229 0004 00F0F800 		and	r0, r0, #248
 230              	.LVL4:
 231 0008 1043     		orrs	r0, r0, r2
 232 000a 1870     		strb	r0, [r3]
 233 000c 7047     		bx	lr
 234              	.L22:
 235 000e 00BF     		.align	2
 236              	.L21:
 237 0010 8E400040 		.word	1073758350
 238              		.cfi_endproc
 239              	.LFE6:
 240              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegist
 241              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister,"ax",%progbits
 242              		.align	2
 243              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister
 244              		.thumb
 245              		.thumb_func
 246              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister, %function
 247              	PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister:
 248              	.LFB7:
 317:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 318:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 319:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 320:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 321:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister
 322:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 11


 323:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 324:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Clears flags that control the operating mode of the clock. This function
 325:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 326:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 327:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 328:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 329:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 330:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 331:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 332:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 333:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 334:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 value.
 335:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 336:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 337:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 338:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 source clock.
 339:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 340:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 341:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 342:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 343:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 344:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 345:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 346:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 347:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 348:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister(uint8 clkMode) 
 349:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 249              		.loc 1 349 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL5:
 350:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC &= ~clkMode | ~PowerMonitor_1_ADC_Ext_CP_Clk_MODE_MASK;
 255              		.loc 1 350 0
 256 0000 034B     		ldr	r3, .L24
 257 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 258 0004 C043     		mvns	r0, r0
 259              	.LVL6:
 260 0006 40F00700 		orr	r0, r0, #7
 261 000a 1040     		ands	r0, r0, r2
 262 000c 1870     		strb	r0, [r3]
 263 000e 7047     		bx	lr
 264              	.L25:
 265              		.align	2
 266              	.L24:
 267 0010 8E400040 		.word	1073758350
 268              		.cfi_endproc
 269              	.LFE7:
 270              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRe
 271              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister,"ax",%progbits
 272              		.align	2
 273              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister
 274              		.thumb
 275              		.thumb_func
 276              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister, %function
 277              	PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 12


 278              	.LFB8:
 351:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 352:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 353:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 354:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 355:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister
 356:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 357:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 358:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Gets the clock mode register value.
 359:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 360:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 361:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 362:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 363:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 364:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 365:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 366:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 367:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 368:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** uint8 PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister(void) 
 369:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 279              		.loc 1 369 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 370:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     return PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & PowerMonitor_1_ADC_Ext_CP_Clk_MODE_MASK;
 284              		.loc 1 370 0
 285 0000 024B     		ldr	r3, .L27
 286 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 371:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 287              		.loc 1 371 0
 288 0004 00F0F800 		and	r0, r0, #248
 289 0008 7047     		bx	lr
 290              	.L28:
 291 000a 00BF     		.align	2
 292              	.L27:
 293 000c 8E400040 		.word	1073758350
 294              		.cfi_endproc
 295              	.LFE8:
 296              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegist
 297              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister,"ax",%progbits
 298              		.align	2
 299              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister, %function
 303              	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister:
 304              	.LFB10:
 372:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 373:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 374:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 375:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister
 376:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 377:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 378:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Sets the input source of the clock. The clock must be disabled before
 379:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  changing the source. The old and new clock sources must be running.
 380:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 13


 381:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 382:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 383:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   following input sources:
 384:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 385:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_IMO
 386:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALM
 387:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_ILO
 388:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_PLL
 389:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALK
 390:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_G
 391:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 392:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details on clock sources.
 393:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 394:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 395:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 396:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 397:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 398:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** void PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister(uint8 clkSource) 
 399:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 400:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint16 currDiv = PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister();
 401:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint8 oldSrc = PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister();
 402:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 403:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     if (oldSrc != CYCLK_SRC_SEL_CLK_SYNC_D && clkSource == CYCLK_SRC_SEL_CLK_SYNC_D && currDiv == 0
 404:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 405:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 406:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* then set the source so we are consistent.                                */
 407:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 408:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC =
 409:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 410:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 411:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     else if (oldSrc == CYCLK_SRC_SEL_CLK_SYNC_D && clkSource != CYCLK_SRC_SEL_CLK_SYNC_D && currDiv
 412:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 413:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 414:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         /* lock when we clear SSS.                                                  */
 415:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC =
 416:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 417:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 418:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 419:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     else
 420:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 421:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC =
 422:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 423:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 424:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 425:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 426:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 427:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 428:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Function Name: PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister
 429:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** ********************************************************************************
 430:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Summary:
 431:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  Gets the input source of the clock.
 432:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 433:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Parameters:
 434:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  void
 435:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 436:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** * Returns:
 437:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *  The input source of the clock. See SetSourceRegister for details.
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 14


 438:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *
 439:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 440:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** uint8 PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister(void) 
 441:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** {
 305              		.loc 1 441 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 442:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     return PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK;
 310              		.loc 1 442 0
 311 0000 024B     		ldr	r3, .L30
 312 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 443:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** }
 313              		.loc 1 443 0
 314 0004 00F00700 		and	r0, r0, #7
 315 0008 7047     		bx	lr
 316              	.L31:
 317 000a 00BF     		.align	2
 318              	.L30:
 319 000c 8E400040 		.word	1073758350
 320              		.cfi_endproc
 321              	.LFE10:
 322              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRe
 323              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister,"ax",%progbits
 324              		.align	2
 325              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister
 326              		.thumb
 327              		.thumb_func
 328              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister, %function
 329              	PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister:
 330              	.LFB4:
 183:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint8 enabled;
 331              		.loc 1 183 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL7:
 336 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 337              		.cfi_def_cfa_offset 24
 338              		.cfi_offset 3, -24
 339              		.cfi_offset 4, -20
 340              		.cfi_offset 5, -16
 341              		.cfi_offset 6, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 0446     		mov	r4, r0
 345 0004 0D46     		mov	r5, r1
 186:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint16 oldDivider = PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister();
 346              		.loc 1 186 0
 347 0006 FFF7FEFF 		bl	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister
 348              	.LVL8:
 349 000a 0646     		mov	r6, r0
 350              	.LVL9:
 187:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 351              		.loc 1 187 0
 352 000c FFF7FEFF 		bl	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 15


 353              	.LVL10:
 189:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 354              		.loc 1 189 0
 355 0010 A042     		cmp	r0, r4
 356 0012 51D0     		beq	.L32
 191:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 357              		.loc 1 191 0
 358 0014 294B     		ldr	r3, .L45
 359 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 360 0018 03F00803 		and	r3, r3, #8
 361 001c DBB2     		uxtb	r3, r3
 362              	.LVL11:
 193:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         {
 363              		.loc 1 193 0
 364 001e 9EB9     		cbnz	r6, .L34
 193:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         {
 365              		.loc 1 193 0 is_stmt 0 discriminator 1
 366 0020 00B1     		cbz	r0, .L35
 193:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         {
 367              		.loc 1 193 0 discriminator 2
 368 0022 8CB9     		cbnz	r4, .L34
 369              	.L35:
 196:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 370              		.loc 1 196 0 is_stmt 1
 371 0024 40B9     		cbnz	r0, .L36
 196:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 372              		.loc 1 196 0 is_stmt 0 discriminator 1
 373 0026 3CB1     		cbz	r4, .L36
 201:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 374              		.loc 1 201 0 is_stmt 1
 375 0028 254B     		ldr	r3, .L45+4
 376              	.LVL12:
 377 002a 1C80     		strh	r4, [r3]	@ movhi
 202:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 378              		.loc 1 202 0
 379 002c 254A     		ldr	r2, .L45+8
 380 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 381 0030 03F0BF03 		and	r3, r3, #191
 382 0034 1370     		strb	r3, [r2]
 383 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 384              	.LVL13:
 385              	.L36:
 208:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(PowerMonitor_1_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 386              		.loc 1 208 0
 387 0038 224A     		ldr	r2, .L45+8
 388 003a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 389              	.LVL14:
 390 003c 43F04003 		orr	r3, r3, #64
 391 0040 1370     		strb	r3, [r2]
 209:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 392              		.loc 1 209 0
 393 0042 1F4B     		ldr	r3, .L45+4
 394 0044 1C80     		strh	r4, [r3]	@ movhi
 395 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 396              	.LVL15:
 397              	.L34:
 214:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 16


 398              		.loc 1 214 0
 399 0048 EBB1     		cbz	r3, .L37
 216:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 400              		.loc 1 216 0
 401 004a 1F49     		ldr	r1, .L45+12
 402 004c 0022     		movs	r2, #0
 403 004e 0A70     		strb	r2, [r1]
 223:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 404              		.loc 1 223 0
 405 0050 0827     		movs	r7, #8
 406 0052 1E4E     		ldr	r6, .L45+16
 407              	.LVL16:
 408 0054 3770     		strb	r7, [r6]
 224:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 409              		.loc 1 224 0
 410 0056 0436     		adds	r6, r6, #4
 411 0058 3270     		strb	r2, [r6]
 227:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 412              		.loc 1 227 0
 413 005a 0C3E     		subs	r6, r6, #12
 414 005c 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 415 005e 02F07F02 		and	r2, r2, #127
 416 0062 3270     		strb	r2, [r6]
 230:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 417              		.loc 1 230 0
 418 0064 1A4A     		ldr	r2, .L45+20
 419 0066 1080     		strh	r0, [r2]	@ movhi
 231:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 420              		.loc 1 231 0
 421 0068 0722     		movs	r2, #7
 422 006a 0A70     		strb	r2, [r1]
 423              	.L38:
 234:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 424              		.loc 1 234 0 discriminator 1
 425 006c 164A     		ldr	r2, .L45+12
 426 006e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 427 0070 12F0010F 		tst	r2, #1
 428 0074 FAD1     		bne	.L38
 237:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 429              		.loc 1 237 0
 430 0076 1149     		ldr	r1, .L45
 431 0078 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 432 007a 02F0F702 		and	r2, r2, #247
 433 007e 0A70     		strb	r2, [r1]
 241:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** #endif
 434              		.loc 1 241 0
 435 0080 0021     		movs	r1, #0
 436 0082 114A     		ldr	r2, .L45+12
 437 0084 1170     		strb	r1, [r2]
 438              	.L37:
 246:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             {
 439              		.loc 1 246 0
 440 0086 0D4A     		ldr	r2, .L45
 441 0088 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 442 008a 12F0080F 		tst	r2, #8
 443 008e 0DD0     		beq	.L39
 249:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 17


 444              		.loc 1 249 0
 445 0090 0F4A     		ldr	r2, .L45+20
 446 0092 1480     		strh	r4, [r2]	@ movhi
 251:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 447              		.loc 1 251 0
 448 0094 0DB1     		cbz	r5, .L43
 449 0096 0321     		movs	r1, #3
 450 0098 00E0     		b	.L40
 451              	.L43:
 452 009a 0121     		movs	r1, #1
 453              	.L40:
 251:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 454              		.loc 1 251 0 is_stmt 0 discriminator 4
 455 009c 0A4A     		ldr	r2, .L45+12
 456 009e 1170     		strb	r1, [r2]
 457              	.L41:
 252:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 458              		.loc 1 252 0 is_stmt 1 discriminator 1
 459 00a0 094A     		ldr	r2, .L45+12
 460 00a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 461 00a4 12F0010F 		tst	r2, #1
 462 00a8 FAD1     		bne	.L41
 463 00aa 01E0     		b	.L42
 464              	.L39:
 257:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             }
 465              		.loc 1 257 0
 466 00ac 044A     		ldr	r2, .L45+4
 467 00ae 1480     		strh	r4, [r2]	@ movhi
 468              	.L42:
 260:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         }
 469              		.loc 1 260 0
 470 00b0 024A     		ldr	r2, .L45
 471 00b2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 472 00b4 0B43     		orrs	r3, r3, r1
 473              	.LVL17:
 474 00b6 1370     		strb	r3, [r2]
 475              	.L32:
 476 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 477              	.L46:
 478 00ba 00BF     		.align	2
 479              	.L45:
 480 00bc A2430040 		.word	1073759138
 481 00c0 8C400040 		.word	1073758348
 482 00c4 8E400040 		.word	1073758350
 483 00c8 01400040 		.word	1073758209
 484 00cc 10400040 		.word	1073758224
 485 00d0 02400040 		.word	1073758210
 486              		.cfi_endproc
 487              	.LFE4:
 488              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_SetDivider
 489              		.section	.text.PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister,"ax",%progbits
 490              		.align	2
 491              		.global	PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister
 492              		.thumb
 493              		.thumb_func
 494              		.type	PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister, %function
 495              	PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 18


 496              	.LFB9:
 399:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint16 currDiv = PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister();
 497              		.loc 1 399 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL18:
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 3, -16
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508 0002 0446     		mov	r4, r0
 400:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     uint8 oldSrc = PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister();
 509              		.loc 1 400 0
 510 0004 FFF7FEFF 		bl	PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister
 511              	.LVL19:
 512 0008 0546     		mov	r5, r0
 513              	.LVL20:
 401:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c **** 
 514              		.loc 1 401 0
 515 000a FFF7FEFF 		bl	PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister
 516              	.LVL21:
 403:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 517              		.loc 1 403 0
 518 000e 0346     		mov	r3, r0
 519 0010 60B1     		cbz	r0, .L48
 403:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 520              		.loc 1 403 0 is_stmt 0 discriminator 1
 521 0012 5CB9     		cbnz	r4, .L48
 403:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 522              		.loc 1 403 0 discriminator 2
 523 0014 55B9     		cbnz	r5, .L48
 407:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC =
 524              		.loc 1 407 0 is_stmt 1
 525 0016 104B     		ldr	r3, .L52
 526 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 527 001a 42F04002 		orr	r2, r2, #64
 528 001e 1A70     		strb	r2, [r3]
 409:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 529              		.loc 1 409 0
 530 0020 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 531              	.LVL22:
 408:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 532              		.loc 1 408 0
 533 0022 00F0F800 		and	r0, r0, #248
 534 0026 2043     		orrs	r0, r0, r4
 535 0028 1870     		strb	r0, [r3]
 536 002a 38BD     		pop	{r3, r4, r5, pc}
 537              	.LVL23:
 538              	.L48:
 411:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 539              		.loc 1 411 0
 540 002c 63B9     		cbnz	r3, .L50
 411:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 541              		.loc 1 411 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 19


 542 002e 5CB1     		cbz	r4, .L50
 411:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     {
 543              		.loc 1 411 0 discriminator 2
 544 0030 55B9     		cbnz	r5, .L50
 416:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****         PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 545              		.loc 1 416 0 is_stmt 1
 546 0032 094B     		ldr	r3, .L52
 547 0034 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 548              	.LVL24:
 415:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 549              		.loc 1 415 0
 550 0036 00F0F800 		and	r0, r0, #248
 551 003a 2043     		orrs	r0, r0, r4
 552 003c 1870     		strb	r0, [r3]
 417:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 553              		.loc 1 417 0
 554 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 555 0040 02F0BF02 		and	r2, r2, #191
 556 0044 1A70     		strb	r2, [r3]
 557 0046 38BD     		pop	{r3, r4, r5, pc}
 558              	.LVL25:
 559              	.L50:
 422:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****     }
 560              		.loc 1 422 0
 561 0048 034B     		ldr	r3, .L52
 562 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 563              	.LVL26:
 421:Generated_Source\PSoC5/PowerMonitor_1_ADC_Ext_CP_Clk.c ****             (PowerMonitor_1_ADC_Ext_CP_Clk_MOD_SRC & ~PowerMonitor_1_ADC_Ext_CP_Clk_SRC_SEL_MSK) | 
 564              		.loc 1 421 0
 565 004c 00F0F800 		and	r0, r0, #248
 566 0050 2043     		orrs	r0, r0, r4
 567 0052 1870     		strb	r0, [r3]
 568 0054 38BD     		pop	{r3, r4, r5, pc}
 569              	.LVL27:
 570              	.L53:
 571 0056 00BF     		.align	2
 572              	.L52:
 573 0058 8E400040 		.word	1073758350
 574              		.cfi_endproc
 575              	.LFE9:
 576              		.size	PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister, .-PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRe
 577              		.text
 578              	.Letext0:
 579              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 580              		.section	.debug_info,"",%progbits
 581              	.Ldebug_info0:
 582 0000 81020000 		.4byte	0x281
 583 0004 0400     		.2byte	0x4
 584 0006 00000000 		.4byte	.Ldebug_abbrev0
 585 000a 04       		.byte	0x4
 586 000b 01       		.uleb128 0x1
 587 000c C5020000 		.4byte	.LASF36
 588 0010 0C       		.byte	0xc
 589 0011 E7010000 		.4byte	.LASF37
 590 0015 9C020000 		.4byte	.LASF38
 591 0019 00000000 		.4byte	.Ldebug_ranges0+0
 592 001d 00000000 		.4byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 20


 593 0021 00000000 		.4byte	.Ldebug_line0
 594 0025 02       		.uleb128 0x2
 595 0026 01       		.byte	0x1
 596 0027 06       		.byte	0x6
 597 0028 79010000 		.4byte	.LASF0
 598 002c 02       		.uleb128 0x2
 599 002d 01       		.byte	0x1
 600 002e 08       		.byte	0x8
 601 002f 6B010000 		.4byte	.LASF1
 602 0033 02       		.uleb128 0x2
 603 0034 02       		.byte	0x2
 604 0035 05       		.byte	0x5
 605 0036 0E000000 		.4byte	.LASF2
 606 003a 02       		.uleb128 0x2
 607 003b 02       		.byte	0x2
 608 003c 07       		.byte	0x7
 609 003d D4010000 		.4byte	.LASF3
 610 0041 02       		.uleb128 0x2
 611 0042 04       		.byte	0x4
 612 0043 05       		.byte	0x5
 613 0044 39010000 		.4byte	.LASF4
 614 0048 02       		.uleb128 0x2
 615 0049 04       		.byte	0x4
 616 004a 07       		.byte	0x7
 617 004b 4D020000 		.4byte	.LASF5
 618 004f 02       		.uleb128 0x2
 619 0050 08       		.byte	0x8
 620 0051 05       		.byte	0x5
 621 0052 A5000000 		.4byte	.LASF6
 622 0056 02       		.uleb128 0x2
 623 0057 08       		.byte	0x8
 624 0058 07       		.byte	0x7
 625 0059 85010000 		.4byte	.LASF7
 626 005d 03       		.uleb128 0x3
 627 005e 04       		.byte	0x4
 628 005f 05       		.byte	0x5
 629 0060 696E7400 		.ascii	"int\000"
 630 0064 02       		.uleb128 0x2
 631 0065 04       		.byte	0x4
 632 0066 07       		.byte	0x7
 633 0067 9C010000 		.4byte	.LASF8
 634 006b 04       		.uleb128 0x4
 635 006c 8E000000 		.4byte	.LASF9
 636 0070 02       		.byte	0x2
 637 0071 9201     		.2byte	0x192
 638 0073 2C000000 		.4byte	0x2c
 639 0077 04       		.uleb128 0x4
 640 0078 78000000 		.4byte	.LASF10
 641 007c 02       		.byte	0x2
 642 007d 9301     		.2byte	0x193
 643 007f 3A000000 		.4byte	0x3a
 644 0083 02       		.uleb128 0x2
 645 0084 04       		.byte	0x4
 646 0085 04       		.byte	0x4
 647 0086 9F000000 		.4byte	.LASF11
 648 008a 02       		.uleb128 0x2
 649 008b 08       		.byte	0x8
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 21


 650 008c 04       		.byte	0x4
 651 008d 5F020000 		.4byte	.LASF12
 652 0091 02       		.uleb128 0x2
 653 0092 01       		.byte	0x1
 654 0093 08       		.byte	0x8
 655 0094 1E020000 		.4byte	.LASF13
 656 0098 04       		.uleb128 0x4
 657 0099 48020000 		.4byte	.LASF14
 658 009d 02       		.byte	0x2
 659 009e 3C02     		.2byte	0x23c
 660 00a0 A4000000 		.4byte	0xa4
 661 00a4 05       		.uleb128 0x5
 662 00a5 6B000000 		.4byte	0x6b
 663 00a9 04       		.uleb128 0x4
 664 00aa 08000000 		.4byte	.LASF15
 665 00ae 02       		.byte	0x2
 666 00af 3D02     		.2byte	0x23d
 667 00b1 B5000000 		.4byte	0xb5
 668 00b5 05       		.uleb128 0x5
 669 00b6 77000000 		.4byte	0x77
 670 00ba 06       		.uleb128 0x6
 671 00bb 84030000 		.4byte	.LASF16
 672 00bf 01       		.byte	0x1
 673 00c0 2C       		.byte	0x2c
 674 00c1 00000000 		.4byte	.LFB0
 675 00c5 10000000 		.4byte	.LFE0-.LFB0
 676 00c9 01       		.uleb128 0x1
 677 00ca 9C       		.byte	0x9c
 678 00cb 06       		.uleb128 0x6
 679 00cc 42010000 		.4byte	.LASF17
 680 00d0 01       		.byte	0x1
 681 00d1 44       		.byte	0x44
 682 00d2 00000000 		.4byte	.LFB1
 683 00d6 10000000 		.4byte	.LFE1-.LFB1
 684 00da 01       		.uleb128 0x1
 685 00db 9C       		.byte	0x9c
 686 00dc 07       		.uleb128 0x7
 687 00dd E3000000 		.4byte	.LASF18
 688 00e1 01       		.byte	0x1
 689 00e2 5D       		.byte	0x5d
 690 00e3 00000000 		.4byte	.LFB2
 691 00e7 64000000 		.4byte	.LFE2-.LFB2
 692 00eb 01       		.uleb128 0x1
 693 00ec 9C       		.byte	0x9c
 694 00ed 0B010000 		.4byte	0x10b
 695 00f1 08       		.uleb128 0x8
 696 00f2 0A000000 		.4byte	.LBB2
 697 00f6 5A000000 		.4byte	.LBE2-.LBB2
 698 00fa 09       		.uleb128 0x9
 699 00fb 35020000 		.4byte	.LASF30
 700 00ff 01       		.byte	0x1
 701 0100 62       		.byte	0x62
 702 0101 77000000 		.4byte	0x77
 703 0105 00000000 		.4byte	.LLST0
 704 0109 00       		.byte	0
 705 010a 00       		.byte	0
 706 010b 07       		.uleb128 0x7
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 22


 707 010c A9010000 		.4byte	.LASF19
 708 0110 01       		.byte	0x1
 709 0111 93       		.byte	0x93
 710 0112 00000000 		.4byte	.LFB3
 711 0116 20000000 		.4byte	.LFE3-.LFB3
 712 011a 01       		.uleb128 0x1
 713 011b 9C       		.byte	0x9c
 714 011c 2E010000 		.4byte	0x12e
 715 0120 0A       		.uleb128 0xa
 716 0121 65010000 		.4byte	.LASF21
 717 0125 01       		.byte	0x1
 718 0126 93       		.byte	0x93
 719 0127 6B000000 		.4byte	0x6b
 720 012b 01       		.uleb128 0x1
 721 012c 50       		.byte	0x50
 722 012d 00       		.byte	0
 723 012e 0B       		.uleb128 0xb
 724 012f 53030000 		.4byte	.LASF24
 725 0133 01       		.byte	0x1
 726 0134 1801     		.2byte	0x118
 727 0136 77000000 		.4byte	0x77
 728 013a 00000000 		.4byte	.LFB5
 729 013e 0C000000 		.4byte	.LFE5-.LFB5
 730 0142 01       		.uleb128 0x1
 731 0143 9C       		.byte	0x9c
 732 0144 0C       		.uleb128 0xc
 733 0145 0B010000 		.4byte	.LASF20
 734 0149 01       		.byte	0x1
 735 014a 3A01     		.2byte	0x13a
 736 014c 00000000 		.4byte	.LFB6
 737 0150 14000000 		.4byte	.LFE6-.LFB6
 738 0154 01       		.uleb128 0x1
 739 0155 9C       		.byte	0x9c
 740 0156 6B010000 		.4byte	0x16b
 741 015a 0D       		.uleb128 0xd
 742 015b 40020000 		.4byte	.LASF22
 743 015f 01       		.byte	0x1
 744 0160 3A01     		.2byte	0x13a
 745 0162 6B000000 		.4byte	0x6b
 746 0166 13000000 		.4byte	.LLST1
 747 016a 00       		.byte	0
 748 016b 0C       		.uleb128 0xc
 749 016c B3000000 		.4byte	.LASF23
 750 0170 01       		.byte	0x1
 751 0171 5C01     		.2byte	0x15c
 752 0173 00000000 		.4byte	.LFB7
 753 0177 14000000 		.4byte	.LFE7-.LFB7
 754 017b 01       		.uleb128 0x1
 755 017c 9C       		.byte	0x9c
 756 017d 92010000 		.4byte	0x192
 757 0181 0D       		.uleb128 0xd
 758 0182 40020000 		.4byte	.LASF22
 759 0186 01       		.byte	0x1
 760 0187 5C01     		.2byte	0x15c
 761 0189 6B000000 		.4byte	0x6b
 762 018d 34000000 		.4byte	.LLST2
 763 0191 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 23


 764 0192 0B       		.uleb128 0xb
 765 0193 66020000 		.4byte	.LASF25
 766 0197 01       		.byte	0x1
 767 0198 7001     		.2byte	0x170
 768 019a 6B000000 		.4byte	0x6b
 769 019e 00000000 		.4byte	.LFB8
 770 01a2 10000000 		.4byte	.LFE8-.LFB8
 771 01a6 01       		.uleb128 0x1
 772 01a7 9C       		.byte	0x9c
 773 01a8 0B       		.uleb128 0xb
 774 01a9 18000000 		.4byte	.LASF26
 775 01ad 01       		.byte	0x1
 776 01ae B801     		.2byte	0x1b8
 777 01b0 6B000000 		.4byte	0x6b
 778 01b4 00000000 		.4byte	.LFB10
 779 01b8 10000000 		.4byte	.LFE10-.LFB10
 780 01bc 01       		.uleb128 0x1
 781 01bd 9C       		.byte	0x9c
 782 01be 07       		.uleb128 0x7
 783 01bf A8030000 		.4byte	.LASF27
 784 01c3 01       		.byte	0x1
 785 01c4 B6       		.byte	0xb6
 786 01c5 00000000 		.4byte	.LFB4
 787 01c9 D4000000 		.4byte	.LFE4-.LFB4
 788 01cd 01       		.uleb128 0x1
 789 01ce 9C       		.byte	0x9c
 790 01cf 2F020000 		.4byte	0x22f
 791 01d3 0E       		.uleb128 0xe
 792 01d4 94000000 		.4byte	.LASF28
 793 01d8 01       		.byte	0x1
 794 01d9 B6       		.byte	0xb6
 795 01da 77000000 		.4byte	0x77
 796 01de 55000000 		.4byte	.LLST3
 797 01e2 0E       		.uleb128 0xe
 798 01e3 7F000000 		.4byte	.LASF29
 799 01e7 01       		.byte	0x1
 800 01e8 B6       		.byte	0xb6
 801 01e9 6B000000 		.4byte	0x6b
 802 01ed 76000000 		.4byte	.LLST4
 803 01f1 09       		.uleb128 0x9
 804 01f2 94020000 		.4byte	.LASF31
 805 01f6 01       		.byte	0x1
 806 01f7 B8       		.byte	0xb8
 807 01f8 6B000000 		.4byte	0x6b
 808 01fc 97000000 		.4byte	.LLST5
 809 0200 09       		.uleb128 0x9
 810 0201 2D020000 		.4byte	.LASF32
 811 0205 01       		.byte	0x1
 812 0206 BA       		.byte	0xba
 813 0207 6B000000 		.4byte	0x6b
 814 020b C0000000 		.4byte	.LLST6
 815 020f 0F       		.uleb128 0xf
 816 0210 35020000 		.4byte	.LASF30
 817 0214 01       		.byte	0x1
 818 0215 BB       		.byte	0xbb
 819 0216 77000000 		.4byte	0x77
 820 021a 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 24


 821 021b 50       		.byte	0x50
 822 021c 10       		.uleb128 0x10
 823 021d 0A000000 		.4byte	.LVL8
 824 0221 A8010000 		.4byte	0x1a8
 825 0225 10       		.uleb128 0x10
 826 0226 10000000 		.4byte	.LVL10
 827 022a 2E010000 		.4byte	0x12e
 828 022e 00       		.byte	0
 829 022f 11       		.uleb128 0x11
 830 0230 48000000 		.4byte	.LASF39
 831 0234 01       		.byte	0x1
 832 0235 8E01     		.2byte	0x18e
 833 0237 00000000 		.4byte	.LFB9
 834 023b 5C000000 		.4byte	.LFE9-.LFB9
 835 023f 01       		.uleb128 0x1
 836 0240 9C       		.byte	0x9c
 837 0241 0D       		.uleb128 0xd
 838 0242 23020000 		.4byte	.LASF33
 839 0246 01       		.byte	0x1
 840 0247 8E01     		.2byte	0x18e
 841 0249 6B000000 		.4byte	0x6b
 842 024d D3000000 		.4byte	.LLST7
 843 0251 12       		.uleb128 0x12
 844 0252 00000000 		.4byte	.LASF34
 845 0256 01       		.byte	0x1
 846 0257 9001     		.2byte	0x190
 847 0259 77000000 		.4byte	0x77
 848 025d F4000000 		.4byte	.LLST8
 849 0261 12       		.uleb128 0x12
 850 0262 87000000 		.4byte	.LASF35
 851 0266 01       		.byte	0x1
 852 0267 9101     		.2byte	0x191
 853 0269 6B000000 		.4byte	0x6b
 854 026d 07010000 		.4byte	.LLST9
 855 0271 10       		.uleb128 0x10
 856 0272 08000000 		.4byte	.LVL19
 857 0276 2E010000 		.4byte	0x12e
 858 027a 10       		.uleb128 0x10
 859 027b 0E000000 		.4byte	.LVL21
 860 027f A8010000 		.4byte	0x1a8
 861 0283 00       		.byte	0
 862 0284 00       		.byte	0
 863              		.section	.debug_abbrev,"",%progbits
 864              	.Ldebug_abbrev0:
 865 0000 01       		.uleb128 0x1
 866 0001 11       		.uleb128 0x11
 867 0002 01       		.byte	0x1
 868 0003 25       		.uleb128 0x25
 869 0004 0E       		.uleb128 0xe
 870 0005 13       		.uleb128 0x13
 871 0006 0B       		.uleb128 0xb
 872 0007 03       		.uleb128 0x3
 873 0008 0E       		.uleb128 0xe
 874 0009 1B       		.uleb128 0x1b
 875 000a 0E       		.uleb128 0xe
 876 000b 55       		.uleb128 0x55
 877 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 25


 878 000d 11       		.uleb128 0x11
 879 000e 01       		.uleb128 0x1
 880 000f 10       		.uleb128 0x10
 881 0010 17       		.uleb128 0x17
 882 0011 00       		.byte	0
 883 0012 00       		.byte	0
 884 0013 02       		.uleb128 0x2
 885 0014 24       		.uleb128 0x24
 886 0015 00       		.byte	0
 887 0016 0B       		.uleb128 0xb
 888 0017 0B       		.uleb128 0xb
 889 0018 3E       		.uleb128 0x3e
 890 0019 0B       		.uleb128 0xb
 891 001a 03       		.uleb128 0x3
 892 001b 0E       		.uleb128 0xe
 893 001c 00       		.byte	0
 894 001d 00       		.byte	0
 895 001e 03       		.uleb128 0x3
 896 001f 24       		.uleb128 0x24
 897 0020 00       		.byte	0
 898 0021 0B       		.uleb128 0xb
 899 0022 0B       		.uleb128 0xb
 900 0023 3E       		.uleb128 0x3e
 901 0024 0B       		.uleb128 0xb
 902 0025 03       		.uleb128 0x3
 903 0026 08       		.uleb128 0x8
 904 0027 00       		.byte	0
 905 0028 00       		.byte	0
 906 0029 04       		.uleb128 0x4
 907 002a 16       		.uleb128 0x16
 908 002b 00       		.byte	0
 909 002c 03       		.uleb128 0x3
 910 002d 0E       		.uleb128 0xe
 911 002e 3A       		.uleb128 0x3a
 912 002f 0B       		.uleb128 0xb
 913 0030 3B       		.uleb128 0x3b
 914 0031 05       		.uleb128 0x5
 915 0032 49       		.uleb128 0x49
 916 0033 13       		.uleb128 0x13
 917 0034 00       		.byte	0
 918 0035 00       		.byte	0
 919 0036 05       		.uleb128 0x5
 920 0037 35       		.uleb128 0x35
 921 0038 00       		.byte	0
 922 0039 49       		.uleb128 0x49
 923 003a 13       		.uleb128 0x13
 924 003b 00       		.byte	0
 925 003c 00       		.byte	0
 926 003d 06       		.uleb128 0x6
 927 003e 2E       		.uleb128 0x2e
 928 003f 00       		.byte	0
 929 0040 3F       		.uleb128 0x3f
 930 0041 19       		.uleb128 0x19
 931 0042 03       		.uleb128 0x3
 932 0043 0E       		.uleb128 0xe
 933 0044 3A       		.uleb128 0x3a
 934 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 26


 935 0046 3B       		.uleb128 0x3b
 936 0047 0B       		.uleb128 0xb
 937 0048 27       		.uleb128 0x27
 938 0049 19       		.uleb128 0x19
 939 004a 11       		.uleb128 0x11
 940 004b 01       		.uleb128 0x1
 941 004c 12       		.uleb128 0x12
 942 004d 06       		.uleb128 0x6
 943 004e 40       		.uleb128 0x40
 944 004f 18       		.uleb128 0x18
 945 0050 9742     		.uleb128 0x2117
 946 0052 19       		.uleb128 0x19
 947 0053 00       		.byte	0
 948 0054 00       		.byte	0
 949 0055 07       		.uleb128 0x7
 950 0056 2E       		.uleb128 0x2e
 951 0057 01       		.byte	0x1
 952 0058 3F       		.uleb128 0x3f
 953 0059 19       		.uleb128 0x19
 954 005a 03       		.uleb128 0x3
 955 005b 0E       		.uleb128 0xe
 956 005c 3A       		.uleb128 0x3a
 957 005d 0B       		.uleb128 0xb
 958 005e 3B       		.uleb128 0x3b
 959 005f 0B       		.uleb128 0xb
 960 0060 27       		.uleb128 0x27
 961 0061 19       		.uleb128 0x19
 962 0062 11       		.uleb128 0x11
 963 0063 01       		.uleb128 0x1
 964 0064 12       		.uleb128 0x12
 965 0065 06       		.uleb128 0x6
 966 0066 40       		.uleb128 0x40
 967 0067 18       		.uleb128 0x18
 968 0068 9742     		.uleb128 0x2117
 969 006a 19       		.uleb128 0x19
 970 006b 01       		.uleb128 0x1
 971 006c 13       		.uleb128 0x13
 972 006d 00       		.byte	0
 973 006e 00       		.byte	0
 974 006f 08       		.uleb128 0x8
 975 0070 0B       		.uleb128 0xb
 976 0071 01       		.byte	0x1
 977 0072 11       		.uleb128 0x11
 978 0073 01       		.uleb128 0x1
 979 0074 12       		.uleb128 0x12
 980 0075 06       		.uleb128 0x6
 981 0076 00       		.byte	0
 982 0077 00       		.byte	0
 983 0078 09       		.uleb128 0x9
 984 0079 34       		.uleb128 0x34
 985 007a 00       		.byte	0
 986 007b 03       		.uleb128 0x3
 987 007c 0E       		.uleb128 0xe
 988 007d 3A       		.uleb128 0x3a
 989 007e 0B       		.uleb128 0xb
 990 007f 3B       		.uleb128 0x3b
 991 0080 0B       		.uleb128 0xb
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 27


 992 0081 49       		.uleb128 0x49
 993 0082 13       		.uleb128 0x13
 994 0083 02       		.uleb128 0x2
 995 0084 17       		.uleb128 0x17
 996 0085 00       		.byte	0
 997 0086 00       		.byte	0
 998 0087 0A       		.uleb128 0xa
 999 0088 05       		.uleb128 0x5
 1000 0089 00       		.byte	0
 1001 008a 03       		.uleb128 0x3
 1002 008b 0E       		.uleb128 0xe
 1003 008c 3A       		.uleb128 0x3a
 1004 008d 0B       		.uleb128 0xb
 1005 008e 3B       		.uleb128 0x3b
 1006 008f 0B       		.uleb128 0xb
 1007 0090 49       		.uleb128 0x49
 1008 0091 13       		.uleb128 0x13
 1009 0092 02       		.uleb128 0x2
 1010 0093 18       		.uleb128 0x18
 1011 0094 00       		.byte	0
 1012 0095 00       		.byte	0
 1013 0096 0B       		.uleb128 0xb
 1014 0097 2E       		.uleb128 0x2e
 1015 0098 00       		.byte	0
 1016 0099 3F       		.uleb128 0x3f
 1017 009a 19       		.uleb128 0x19
 1018 009b 03       		.uleb128 0x3
 1019 009c 0E       		.uleb128 0xe
 1020 009d 3A       		.uleb128 0x3a
 1021 009e 0B       		.uleb128 0xb
 1022 009f 3B       		.uleb128 0x3b
 1023 00a0 05       		.uleb128 0x5
 1024 00a1 27       		.uleb128 0x27
 1025 00a2 19       		.uleb128 0x19
 1026 00a3 49       		.uleb128 0x49
 1027 00a4 13       		.uleb128 0x13
 1028 00a5 11       		.uleb128 0x11
 1029 00a6 01       		.uleb128 0x1
 1030 00a7 12       		.uleb128 0x12
 1031 00a8 06       		.uleb128 0x6
 1032 00a9 40       		.uleb128 0x40
 1033 00aa 18       		.uleb128 0x18
 1034 00ab 9742     		.uleb128 0x2117
 1035 00ad 19       		.uleb128 0x19
 1036 00ae 00       		.byte	0
 1037 00af 00       		.byte	0
 1038 00b0 0C       		.uleb128 0xc
 1039 00b1 2E       		.uleb128 0x2e
 1040 00b2 01       		.byte	0x1
 1041 00b3 3F       		.uleb128 0x3f
 1042 00b4 19       		.uleb128 0x19
 1043 00b5 03       		.uleb128 0x3
 1044 00b6 0E       		.uleb128 0xe
 1045 00b7 3A       		.uleb128 0x3a
 1046 00b8 0B       		.uleb128 0xb
 1047 00b9 3B       		.uleb128 0x3b
 1048 00ba 05       		.uleb128 0x5
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 28


 1049 00bb 27       		.uleb128 0x27
 1050 00bc 19       		.uleb128 0x19
 1051 00bd 11       		.uleb128 0x11
 1052 00be 01       		.uleb128 0x1
 1053 00bf 12       		.uleb128 0x12
 1054 00c0 06       		.uleb128 0x6
 1055 00c1 40       		.uleb128 0x40
 1056 00c2 18       		.uleb128 0x18
 1057 00c3 9742     		.uleb128 0x2117
 1058 00c5 19       		.uleb128 0x19
 1059 00c6 01       		.uleb128 0x1
 1060 00c7 13       		.uleb128 0x13
 1061 00c8 00       		.byte	0
 1062 00c9 00       		.byte	0
 1063 00ca 0D       		.uleb128 0xd
 1064 00cb 05       		.uleb128 0x5
 1065 00cc 00       		.byte	0
 1066 00cd 03       		.uleb128 0x3
 1067 00ce 0E       		.uleb128 0xe
 1068 00cf 3A       		.uleb128 0x3a
 1069 00d0 0B       		.uleb128 0xb
 1070 00d1 3B       		.uleb128 0x3b
 1071 00d2 05       		.uleb128 0x5
 1072 00d3 49       		.uleb128 0x49
 1073 00d4 13       		.uleb128 0x13
 1074 00d5 02       		.uleb128 0x2
 1075 00d6 17       		.uleb128 0x17
 1076 00d7 00       		.byte	0
 1077 00d8 00       		.byte	0
 1078 00d9 0E       		.uleb128 0xe
 1079 00da 05       		.uleb128 0x5
 1080 00db 00       		.byte	0
 1081 00dc 03       		.uleb128 0x3
 1082 00dd 0E       		.uleb128 0xe
 1083 00de 3A       		.uleb128 0x3a
 1084 00df 0B       		.uleb128 0xb
 1085 00e0 3B       		.uleb128 0x3b
 1086 00e1 0B       		.uleb128 0xb
 1087 00e2 49       		.uleb128 0x49
 1088 00e3 13       		.uleb128 0x13
 1089 00e4 02       		.uleb128 0x2
 1090 00e5 17       		.uleb128 0x17
 1091 00e6 00       		.byte	0
 1092 00e7 00       		.byte	0
 1093 00e8 0F       		.uleb128 0xf
 1094 00e9 34       		.uleb128 0x34
 1095 00ea 00       		.byte	0
 1096 00eb 03       		.uleb128 0x3
 1097 00ec 0E       		.uleb128 0xe
 1098 00ed 3A       		.uleb128 0x3a
 1099 00ee 0B       		.uleb128 0xb
 1100 00ef 3B       		.uleb128 0x3b
 1101 00f0 0B       		.uleb128 0xb
 1102 00f1 49       		.uleb128 0x49
 1103 00f2 13       		.uleb128 0x13
 1104 00f3 02       		.uleb128 0x2
 1105 00f4 18       		.uleb128 0x18
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 29


 1106 00f5 00       		.byte	0
 1107 00f6 00       		.byte	0
 1108 00f7 10       		.uleb128 0x10
 1109 00f8 898201   		.uleb128 0x4109
 1110 00fb 00       		.byte	0
 1111 00fc 11       		.uleb128 0x11
 1112 00fd 01       		.uleb128 0x1
 1113 00fe 31       		.uleb128 0x31
 1114 00ff 13       		.uleb128 0x13
 1115 0100 00       		.byte	0
 1116 0101 00       		.byte	0
 1117 0102 11       		.uleb128 0x11
 1118 0103 2E       		.uleb128 0x2e
 1119 0104 01       		.byte	0x1
 1120 0105 3F       		.uleb128 0x3f
 1121 0106 19       		.uleb128 0x19
 1122 0107 03       		.uleb128 0x3
 1123 0108 0E       		.uleb128 0xe
 1124 0109 3A       		.uleb128 0x3a
 1125 010a 0B       		.uleb128 0xb
 1126 010b 3B       		.uleb128 0x3b
 1127 010c 05       		.uleb128 0x5
 1128 010d 27       		.uleb128 0x27
 1129 010e 19       		.uleb128 0x19
 1130 010f 11       		.uleb128 0x11
 1131 0110 01       		.uleb128 0x1
 1132 0111 12       		.uleb128 0x12
 1133 0112 06       		.uleb128 0x6
 1134 0113 40       		.uleb128 0x40
 1135 0114 18       		.uleb128 0x18
 1136 0115 9742     		.uleb128 0x2117
 1137 0117 19       		.uleb128 0x19
 1138 0118 00       		.byte	0
 1139 0119 00       		.byte	0
 1140 011a 12       		.uleb128 0x12
 1141 011b 34       		.uleb128 0x34
 1142 011c 00       		.byte	0
 1143 011d 03       		.uleb128 0x3
 1144 011e 0E       		.uleb128 0xe
 1145 011f 3A       		.uleb128 0x3a
 1146 0120 0B       		.uleb128 0xb
 1147 0121 3B       		.uleb128 0x3b
 1148 0122 05       		.uleb128 0x5
 1149 0123 49       		.uleb128 0x49
 1150 0124 13       		.uleb128 0x13
 1151 0125 02       		.uleb128 0x2
 1152 0126 17       		.uleb128 0x17
 1153 0127 00       		.byte	0
 1154 0128 00       		.byte	0
 1155 0129 00       		.byte	0
 1156              		.section	.debug_loc,"",%progbits
 1157              	.Ldebug_loc0:
 1158              	.LLST0:
 1159 0000 2A000000 		.4byte	.LVL0
 1160 0004 50000000 		.4byte	.LVL1
 1161 0008 0100     		.2byte	0x1
 1162 000a 52       		.byte	0x52
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 30


 1163 000b 00000000 		.4byte	0
 1164 000f 00000000 		.4byte	0
 1165              	.LLST1:
 1166 0013 00000000 		.4byte	.LVL3
 1167 0017 08000000 		.4byte	.LVL4
 1168 001b 0100     		.2byte	0x1
 1169 001d 50       		.byte	0x50
 1170 001e 08000000 		.4byte	.LVL4
 1171 0022 14000000 		.4byte	.LFE6
 1172 0026 0400     		.2byte	0x4
 1173 0028 F3       		.byte	0xf3
 1174 0029 01       		.uleb128 0x1
 1175 002a 50       		.byte	0x50
 1176 002b 9F       		.byte	0x9f
 1177 002c 00000000 		.4byte	0
 1178 0030 00000000 		.4byte	0
 1179              	.LLST2:
 1180 0034 00000000 		.4byte	.LVL5
 1181 0038 06000000 		.4byte	.LVL6
 1182 003c 0100     		.2byte	0x1
 1183 003e 50       		.byte	0x50
 1184 003f 06000000 		.4byte	.LVL6
 1185 0043 14000000 		.4byte	.LFE7
 1186 0047 0400     		.2byte	0x4
 1187 0049 F3       		.byte	0xf3
 1188 004a 01       		.uleb128 0x1
 1189 004b 50       		.byte	0x50
 1190 004c 9F       		.byte	0x9f
 1191 004d 00000000 		.4byte	0
 1192 0051 00000000 		.4byte	0
 1193              	.LLST3:
 1194 0055 00000000 		.4byte	.LVL7
 1195 0059 09000000 		.4byte	.LVL8-1
 1196 005d 0100     		.2byte	0x1
 1197 005f 50       		.byte	0x50
 1198 0060 09000000 		.4byte	.LVL8-1
 1199 0064 D4000000 		.4byte	.LFE4
 1200 0068 0400     		.2byte	0x4
 1201 006a F3       		.byte	0xf3
 1202 006b 01       		.uleb128 0x1
 1203 006c 50       		.byte	0x50
 1204 006d 9F       		.byte	0x9f
 1205 006e 00000000 		.4byte	0
 1206 0072 00000000 		.4byte	0
 1207              	.LLST4:
 1208 0076 00000000 		.4byte	.LVL7
 1209 007a 09000000 		.4byte	.LVL8-1
 1210 007e 0100     		.2byte	0x1
 1211 0080 51       		.byte	0x51
 1212 0081 09000000 		.4byte	.LVL8-1
 1213 0085 D4000000 		.4byte	.LFE4
 1214 0089 0400     		.2byte	0x4
 1215 008b F3       		.byte	0xf3
 1216 008c 01       		.uleb128 0x1
 1217 008d 51       		.byte	0x51
 1218 008e 9F       		.byte	0x9f
 1219 008f 00000000 		.4byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 31


 1220 0093 00000000 		.4byte	0
 1221              	.LLST5:
 1222 0097 1E000000 		.4byte	.LVL11
 1223 009b 2A000000 		.4byte	.LVL12
 1224 009f 0100     		.2byte	0x1
 1225 00a1 53       		.byte	0x53
 1226 00a2 38000000 		.4byte	.LVL13
 1227 00a6 3C000000 		.4byte	.LVL14
 1228 00aa 0100     		.2byte	0x1
 1229 00ac 53       		.byte	0x53
 1230 00ad 48000000 		.4byte	.LVL15
 1231 00b1 B6000000 		.4byte	.LVL17
 1232 00b5 0100     		.2byte	0x1
 1233 00b7 53       		.byte	0x53
 1234 00b8 00000000 		.4byte	0
 1235 00bc 00000000 		.4byte	0
 1236              	.LLST6:
 1237 00c0 0C000000 		.4byte	.LVL9
 1238 00c4 54000000 		.4byte	.LVL16
 1239 00c8 0100     		.2byte	0x1
 1240 00ca 56       		.byte	0x56
 1241 00cb 00000000 		.4byte	0
 1242 00cf 00000000 		.4byte	0
 1243              	.LLST7:
 1244 00d3 00000000 		.4byte	.LVL18
 1245 00d7 07000000 		.4byte	.LVL19-1
 1246 00db 0100     		.2byte	0x1
 1247 00dd 50       		.byte	0x50
 1248 00de 07000000 		.4byte	.LVL19-1
 1249 00e2 5C000000 		.4byte	.LFE9
 1250 00e6 0400     		.2byte	0x4
 1251 00e8 F3       		.byte	0xf3
 1252 00e9 01       		.uleb128 0x1
 1253 00ea 50       		.byte	0x50
 1254 00eb 9F       		.byte	0x9f
 1255 00ec 00000000 		.4byte	0
 1256 00f0 00000000 		.4byte	0
 1257              	.LLST8:
 1258 00f4 0A000000 		.4byte	.LVL20
 1259 00f8 56000000 		.4byte	.LVL27
 1260 00fc 0100     		.2byte	0x1
 1261 00fe 55       		.byte	0x55
 1262 00ff 00000000 		.4byte	0
 1263 0103 00000000 		.4byte	0
 1264              	.LLST9:
 1265 0107 0E000000 		.4byte	.LVL21
 1266 010b 22000000 		.4byte	.LVL22
 1267 010f 0100     		.2byte	0x1
 1268 0111 50       		.byte	0x50
 1269 0112 2C000000 		.4byte	.LVL23
 1270 0116 36000000 		.4byte	.LVL24
 1271 011a 0100     		.2byte	0x1
 1272 011c 50       		.byte	0x50
 1273 011d 48000000 		.4byte	.LVL25
 1274 0121 4C000000 		.4byte	.LVL26
 1275 0125 0100     		.2byte	0x1
 1276 0127 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 32


 1277 0128 00000000 		.4byte	0
 1278 012c 00000000 		.4byte	0
 1279              		.section	.debug_aranges,"",%progbits
 1280 0000 6C000000 		.4byte	0x6c
 1281 0004 0200     		.2byte	0x2
 1282 0006 00000000 		.4byte	.Ldebug_info0
 1283 000a 04       		.byte	0x4
 1284 000b 00       		.byte	0
 1285 000c 0000     		.2byte	0
 1286 000e 0000     		.2byte	0
 1287 0010 00000000 		.4byte	.LFB0
 1288 0014 10000000 		.4byte	.LFE0-.LFB0
 1289 0018 00000000 		.4byte	.LFB1
 1290 001c 10000000 		.4byte	.LFE1-.LFB1
 1291 0020 00000000 		.4byte	.LFB2
 1292 0024 64000000 		.4byte	.LFE2-.LFB2
 1293 0028 00000000 		.4byte	.LFB3
 1294 002c 20000000 		.4byte	.LFE3-.LFB3
 1295 0030 00000000 		.4byte	.LFB5
 1296 0034 0C000000 		.4byte	.LFE5-.LFB5
 1297 0038 00000000 		.4byte	.LFB6
 1298 003c 14000000 		.4byte	.LFE6-.LFB6
 1299 0040 00000000 		.4byte	.LFB7
 1300 0044 14000000 		.4byte	.LFE7-.LFB7
 1301 0048 00000000 		.4byte	.LFB8
 1302 004c 10000000 		.4byte	.LFE8-.LFB8
 1303 0050 00000000 		.4byte	.LFB10
 1304 0054 10000000 		.4byte	.LFE10-.LFB10
 1305 0058 00000000 		.4byte	.LFB4
 1306 005c D4000000 		.4byte	.LFE4-.LFB4
 1307 0060 00000000 		.4byte	.LFB9
 1308 0064 5C000000 		.4byte	.LFE9-.LFB9
 1309 0068 00000000 		.4byte	0
 1310 006c 00000000 		.4byte	0
 1311              		.section	.debug_ranges,"",%progbits
 1312              	.Ldebug_ranges0:
 1313 0000 00000000 		.4byte	.LFB0
 1314 0004 10000000 		.4byte	.LFE0
 1315 0008 00000000 		.4byte	.LFB1
 1316 000c 10000000 		.4byte	.LFE1
 1317 0010 00000000 		.4byte	.LFB2
 1318 0014 64000000 		.4byte	.LFE2
 1319 0018 00000000 		.4byte	.LFB3
 1320 001c 20000000 		.4byte	.LFE3
 1321 0020 00000000 		.4byte	.LFB5
 1322 0024 0C000000 		.4byte	.LFE5
 1323 0028 00000000 		.4byte	.LFB6
 1324 002c 14000000 		.4byte	.LFE6
 1325 0030 00000000 		.4byte	.LFB7
 1326 0034 14000000 		.4byte	.LFE7
 1327 0038 00000000 		.4byte	.LFB8
 1328 003c 10000000 		.4byte	.LFE8
 1329 0040 00000000 		.4byte	.LFB10
 1330 0044 10000000 		.4byte	.LFE10
 1331 0048 00000000 		.4byte	.LFB4
 1332 004c D4000000 		.4byte	.LFE4
 1333 0050 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 33


 1334 0054 5C000000 		.4byte	.LFE9
 1335 0058 00000000 		.4byte	0
 1336 005c 00000000 		.4byte	0
 1337              		.section	.debug_line,"",%progbits
 1338              	.Ldebug_line0:
 1339 0000 8C010000 		.section	.debug_str,"MS",%progbits,1
 1339      02005A00 
 1339      00000201 
 1339      FB0E0D00 
 1339      01010101 
 1340              	.LASF34:
 1341 0000 63757272 		.ascii	"currDiv\000"
 1341      44697600 
 1342              	.LASF15:
 1343 0008 72656731 		.ascii	"reg16\000"
 1343      3600
 1344              	.LASF2:
 1345 000e 73686F72 		.ascii	"short int\000"
 1345      7420696E 
 1345      7400
 1346              	.LASF26:
 1347 0018 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_GetSourceRegister\000"
 1347      724D6F6E 
 1347      69746F72 
 1347      5F315F41 
 1347      44435F45 
 1348              	.LASF39:
 1349 0048 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_SetSourceRegister\000"
 1349      724D6F6E 
 1349      69746F72 
 1349      5F315F41 
 1349      44435F45 
 1350              	.LASF10:
 1351 0078 75696E74 		.ascii	"uint16\000"
 1351      313600
 1352              	.LASF29:
 1353 007f 72657374 		.ascii	"restart\000"
 1353      61727400 
 1354              	.LASF35:
 1355 0087 6F6C6453 		.ascii	"oldSrc\000"
 1355      726300
 1356              	.LASF9:
 1357 008e 75696E74 		.ascii	"uint8\000"
 1357      3800
 1358              	.LASF28:
 1359 0094 636C6B44 		.ascii	"clkDivider\000"
 1359      69766964 
 1359      657200
 1360              	.LASF11:
 1361 009f 666C6F61 		.ascii	"float\000"
 1361      7400
 1362              	.LASF6:
 1363 00a5 6C6F6E67 		.ascii	"long long int\000"
 1363      206C6F6E 
 1363      6720696E 
 1363      7400
 1364              	.LASF23:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 34


 1365 00b3 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_ClearModeRegister\000"
 1365      724D6F6E 
 1365      69746F72 
 1365      5F315F41 
 1365      44435F45 
 1366              	.LASF18:
 1367 00e3 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_StopBlock\000"
 1367      724D6F6E 
 1367      69746F72 
 1367      5F315F41 
 1367      44435F45 
 1368              	.LASF20:
 1369 010b 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_SetModeRegister\000"
 1369      724D6F6E 
 1369      69746F72 
 1369      5F315F41 
 1369      44435F45 
 1370              	.LASF4:
 1371 0139 6C6F6E67 		.ascii	"long int\000"
 1371      20696E74 
 1371      00
 1372              	.LASF17:
 1373 0142 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_Stop\000"
 1373      724D6F6E 
 1373      69746F72 
 1373      5F315F41 
 1373      44435F45 
 1374              	.LASF21:
 1375 0165 73746174 		.ascii	"state\000"
 1375      6500
 1376              	.LASF1:
 1377 016b 756E7369 		.ascii	"unsigned char\000"
 1377      676E6564 
 1377      20636861 
 1377      7200
 1378              	.LASF0:
 1379 0179 7369676E 		.ascii	"signed char\000"
 1379      65642063 
 1379      68617200 
 1380              	.LASF7:
 1381 0185 6C6F6E67 		.ascii	"long long unsigned int\000"
 1381      206C6F6E 
 1381      6720756E 
 1381      7369676E 
 1381      65642069 
 1382              	.LASF8:
 1383 019c 756E7369 		.ascii	"unsigned int\000"
 1383      676E6564 
 1383      20696E74 
 1383      00
 1384              	.LASF19:
 1385 01a9 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_StandbyPower\000"
 1385      724D6F6E 
 1385      69746F72 
 1385      5F315F41 
 1385      44435F45 
 1386              	.LASF3:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 35


 1387 01d4 73686F72 		.ascii	"short unsigned int\000"
 1387      7420756E 
 1387      7369676E 
 1387      65642069 
 1387      6E7400
 1388              	.LASF37:
 1389 01e7 47656E65 		.ascii	"Generated_Source\\PSoC5\\PowerMonitor_1_ADC_Ext_CP_"
 1389      72617465 
 1389      645F536F 
 1389      75726365 
 1389      5C50536F 
 1390 0218 436C6B2E 		.ascii	"Clk.c\000"
 1390      6300
 1391              	.LASF13:
 1392 021e 63686172 		.ascii	"char\000"
 1392      00
 1393              	.LASF33:
 1394 0223 636C6B53 		.ascii	"clkSource\000"
 1394      6F757263 
 1394      6500
 1395              	.LASF32:
 1396 022d 63757272 		.ascii	"currSrc\000"
 1396      53726300 
 1397              	.LASF30:
 1398 0235 6F6C6444 		.ascii	"oldDivider\000"
 1398      69766964 
 1398      657200
 1399              	.LASF22:
 1400 0240 636C6B4D 		.ascii	"clkMode\000"
 1400      6F646500 
 1401              	.LASF14:
 1402 0248 72656738 		.ascii	"reg8\000"
 1402      00
 1403              	.LASF5:
 1404 024d 6C6F6E67 		.ascii	"long unsigned int\000"
 1404      20756E73 
 1404      69676E65 
 1404      6420696E 
 1404      7400
 1405              	.LASF12:
 1406 025f 646F7562 		.ascii	"double\000"
 1406      6C6500
 1407              	.LASF25:
 1408 0266 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_GetModeRegister\000"
 1408      724D6F6E 
 1408      69746F72 
 1408      5F315F41 
 1408      44435F45 
 1409              	.LASF31:
 1410 0294 656E6162 		.ascii	"enabled\000"
 1410      6C656400 
 1411              	.LASF38:
 1412 029c 473A5C44 		.ascii	"G:\\DSA\\PORIGE\\Workspace03\\Design01.cydsn\000"
 1412      53415C50 
 1412      4F524947 
 1412      455C576F 
 1412      726B7370 
ARM GAS  C:\Users\user\AppData\Local\Temp\cckrkLfg.s 			page 36


 1413              	.LASF36:
 1414 02c5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1414      43313120 
 1414      352E342E 
 1414      31203230 
 1414      31363036 
 1415 02f8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1415      20726576 
 1415      6973696F 
 1415      6E203233 
 1415      37373135 
 1416 032b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1416      66756E63 
 1416      74696F6E 
 1416      2D736563 
 1416      74696F6E 
 1417              	.LASF24:
 1418 0353 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_GetDividerRegister\000"
 1418      724D6F6E 
 1418      69746F72 
 1418      5F315F41 
 1418      44435F45 
 1419              	.LASF16:
 1420 0384 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_Start\000"
 1420      724D6F6E 
 1420      69746F72 
 1420      5F315F41 
 1420      44435F45 
 1421              	.LASF27:
 1422 03a8 506F7765 		.ascii	"PowerMonitor_1_ADC_Ext_CP_Clk_SetDividerRegister\000"
 1422      724D6F6E 
 1422      69746F72 
 1422      5F315F41 
 1422      44435F45 
 1423              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
